MODULE COMM
    IMPLICIT NONE
    LOGICAL :: HEADCUT
    REAL, PARAMETER :: COEFB = 1.70
    REAL, PARAMETER :: COEFS = 1.30
    REAL, PARAMETER :: RELAX = 0.50
    INTEGER :: OVERTOP_PIPE, IDOWNSLOPE, NSEDMOD, MODOVERTOP
    INTEGER :: IUPSTRM, IDWNSTRM, MHEADCUT, METHODSIDESLOPE
    REAL :: DT, TIME, TIMEBEG, TIMEEND
    REAL :: RHOW, AMIU
    REAL :: DAMHEIGHT, DAMCREST, SLOPEUP, SLOPEDWN, DAMLENGTH
    REAL :: PILOTDEPTH, PILOTWIDTH, PILOTELEV, PILOTHEIGHT
    REAL :: HEADLOSSLOC, COHESION
    REAL :: TANFRICT, ERODINDEX, COEFCT
    REAL :: BREACHLOCATE, BREACHSIDESLOPE, BREACHSIDESLOPE0
    REAL :: ANBREACH, ANDWNSLOPE
    REAL :: DIASED, SPEC, PORO, CLAYCONTENT, COEFKD, COEFTAUC
    REAL :: ADAPTLAMDA
    REAL :: ZSRESVR0, ZSDOWNSTRM0
    REAL :: DWNCHANWIDTH, DWNCHANSLOPE, ANDWNCHAN
    REAL :: XDWNSLOPBG, ZDWNSLOPBG, COREUPCORNER_N, COREDWNCORNER_N
    REAL :: SEDFAILMASS, QTFROMRESVR, VOLWATEROUT
    REAL :: SINALPHA, COSALPHA, FRICTIONFACTOR
    REAL :: XUPTOE, XUPCORNER, XDWNCORNER, XDWNTOE, XUPCENTER, XDWNCENTER
    REAL :: ZBUPTOE, ZBUPCORNER, ZBDWNCORNER, ZBDWNTOE, XHEADCUT
    REAL :: XUPBRINK, XDWNBRINK
    REAL :: ZBBREACH, WIDTHBREACH, FLOWBREACH, QTBREACH, HEIGHTBREACH, WIDTHDWNSLOPE, SLOPEDWN_N
    REAL :: ZBHARDBOTTOM, FLOWBREACH0, FLOWBREACH1
    REAL :: BETADWNSLOPE, BETABREACH, BETABREACH0
    REAL :: WSET, COREWSET
    REAL :: ZSDWNCHAN, QPEAK, QTDWNSLOPE
    INTEGER :: NSEDMODCORE
    REAL :: COREHEIGHT, CORECREST, CORESLOPEUP, CORESLOPEDWN, CORELOCATION
    REAL :: COREUPTOE, COREDWNTOE, COREUPCORNER, COREDWNCORNER
    REAL :: COREDIASED, CORESPEC, COREPORO, CORECLAYCONTENT, CORECOEFKD, CORECOEFTAUC
    REAL :: COREBREACHSIDESLOPE, COREBETABREACH, ANCORE
    REAL :: CORECOHESION, CORETENSILE, CORETANFRICT
    REAL :: SLOPECOREDWN, SLOPECOREUP
    INTEGER :: MCOVERBREACH, MCOVERDWNSLOPE
    REAL :: COVERANBREACH, COVERANDWNSLOPE
    REAL :: COVERTHICKBREACH, COVERTHICKDWNSLOPE
    REAL :: COVERBETABREACH, COVERBREACHSIDESLOPE
    REAL :: COVERDIASED, COVERSPEC, COVERPORO, COVERCLAYCONTENT, COVERCOEFKD, COVERCOEFTAUC
    REAL :: FLOWSPILL0, FLOWSPILL
    INTEGER :: NUM_RESVR, NUM_ZSUPSTRM, NUM_DOWNSTORE, NUM_FLOWIN, NUM_FLOWSPILL
    INTEGER :: METHODRESVR
    REAL :: RESVRVH, RESVRAH, RESVRH, RESVRM, RESVRALPHA
    REAL, DIMENSION (1000) :: RESVR_ZS, RESVR_AREA
    REAL, DIMENSION (1000) :: ZSUPSTRM_ZS, ZSUPSTRM_TIME
    REAL, DIMENSION (1000) :: DOWNSTORE_ZS, DOWNSTORE_AREA
    REAL, DIMENSION (1000) :: FLOWINDIS, FLOWINTIME
    REAL, DIMENSION (1000) :: FLOWSPILLDIS, FLOWSPILLTIME
    CHARACTER(LEN=100) :: INPFILE, OUTFILE
    CHARACTER(LEN=15) :: RESVE_ID
    INTEGER :: ISDAMBREACH
    REAL :: DBTIME_STRAT, DBTIME_END
    REAL :: MAXDAMHIGH, BASEFOUNDATION 
END MODULE COMM




PROGRAM DamBreach
    USE COMM
    IMPLICIT NONE

    LOGICAL :: IS_NEED_FIND_ENDTIME, IS_NEED_FIND_STARTTIME
    INTEGER :: IT, NUMITR, INDEXBREAK
    REAL :: TIMEMINUSHALFDT, ZSRESVR1, FLOWIN, ZSDOWNSTRM1, DIFF_FLOWBREACH   
    REAL :: DOWNSTORE_FLOWOUT, ERROR, ERRORZ, ERRORZD, WIDTHBR
    REAL :: ZSRESVR1N, ZSDOWNSTRM1N, ZSRESVRM, AREARESVR, AREADOWNSTORE
    REAL, PARAMETER :: EPS = 1.0E-5
!    RESVE_ID = "43038140011"
!    INPFILE = "INP1.TXT"
!    OUTFILE = "OUT1.TXT"
    
    CALL GET_COMMAND_ARGUMENT(1, RESVE_ID)   
    CALL GET_COMMAND_ARGUMENT(2, INPFILE)
    CALL GET_COMMAND_ARGUMENT(3, OUTFILE)
    CALL OPENFILE
    CALL DATAREAD
    CALL INITCALC
    IS_NEED_FIND_ENDTIME = .FALSE.
    IS_NEED_FIND_STARTTIME = .TRUE.
    ISDAMBREACH = 0
    DBTIME_STRAT = -1.0
    DBTIME_END = -1.0
    IT = 1
    INDEXBREAK = 100000000
    ZSRESVRM = ZSRESVR0
    DO WHILE ( TIME <= TIMEEND )
        TIMEMINUSHALFDT = TIME - 0.50 * DT
        CALL INTERPOLAT(ZSRESVRM, FLOWSPILL0, FLOWSPILLTIME, FLOWSPILLDIS, NUM_FLOWSPILL)
        IF ( IUPSTRM == 1 ) THEN
            ZSRESVR1 = ZSRESVR0
            CALL INTERPOLAT(TIMEMINUSHALFDT, FLOWIN, FLOWINTIME, FLOWINDIS, NUM_FLOWIN)
        ELSE IF ( IUPSTRM == 2 ) THEN
            CALL INTERPOLAT(TIME, ZSRESVR1, ZSUPSTRM_TIME, ZSUPSTRM_ZS, NUM_ZSUPSTRM)
        END IF
        ZSDOWNSTRM1 = ZSDOWNSTRM0
        FLOWBREACH1 = FLOWBREACH0
        DOWNSTORE_FLOWOUT = 0.00
        NUMITR = 1
        ERROR  = 1.00
        ERRORZ = 1.00

        DO WHILE( ( ( ERROR > EPS ) .OR. ( ERRORZ > EPS ) ) .AND. NUMITR < 100 )
            CALL BREACHFLOW( ZSRESVR1, ZSDOWNSTRM1, ERROR  )
            FLOWBREACH = 0.50 * ( FLOWBREACH1 + FLOWBREACH0 )
            ZSRESVRM   = 0.50 * ( ZSRESVR1    + ZSRESVR0    )
            ZSDWNCHAN  = 0.50 * ( ZSDOWNSTRM1 + ZSDOWNSTRM0 )
            IF ( IUPSTRM == 1 ) THEN 
                IF ( METHODRESVR == 1 ) THEN
                    CALL INTERPOLAT( ZSRESVRM, AREARESVR, RESVR_ZS, RESVR_AREA, NUM_RESVR )
                ELSE IF ( METHODRESVR == 2 ) THEN
                    AREARESVR = RESVRALPHA * MAX( ZSRESVRM, 0.01*RESVRH ) ** RESVRM
                END IF
                ZSRESVR1N = ZSRESVR0 + DT / AREARESVR * ( FLOWIN - FLOWBREACH - FLOWSPILL )
                ERRORZ = ABS( ZSRESVR1N - ZSRESVR1 )
                ZSRESVR1 = ZSRESVR1N
            END IF
            IF ( IUPSTRM == 2 ) ERRORZ = 0.00 
            IF ( IDWNSTRM == 1 ) THEN 
                ZSDOWNSTRM1N = ( ANDWNCHAN * FLOWBREACH / DWNCHANWIDTH / DWNCHANSLOPE**0.5 ) ** 0.6
                ZSDOWNSTRM1N = MIN( ZSDOWNSTRM1N, ZSRESVRM )
                ERRORZD = ABS( ZSDOWNSTRM1N - ZSDOWNSTRM1 )
                ZSDOWNSTRM1 = 0.5 * RELAX * ZSDOWNSTRM1N + ( 1.0 - 0.5 * RELAX ) * ZSDOWNSTRM1
                IF ( ERRORZD > ERRORZ ) ERRORZ = ERRORZD
            ELSE IF ( IDWNSTRM == 2 ) THEN
                CALL INTERPOLAT( ZSDWNCHAN, AREADOWNSTORE, DOWNSTORE_ZS, DOWNSTORE_AREA, NUM_DOWNSTORE )
                ZSDOWNSTRM1N = ZSDOWNSTRM0 + DT / AREADOWNSTORE * ( FLOWBREACH + FLOWSPILL - DOWNSTORE_FLOWOUT )
                ERRORZD = ABS( ZSDOWNSTRM1N - ZSDOWNSTRM1 )
                ZSDOWNSTRM1 = ZSDOWNSTRM1N
                IF ( ERRORZD > ERRORZ ) ERRORZ = ERRORZD
            END IF
            NUMITR = NUMITR + 1 
        END DO
        VOLWATEROUT = VOLWATEROUT + DT * ( FLOWBREACH + FLOWSPILL )
        IF ( FLOWBREACH <= 0.0001 ) GOTO 11
            
        IF ( FLOWBREACH > QPEAK ) QPEAK = FLOWBREACH
       
       CALL SOILMOVE( ZSRESVRM )
        
11      CONTINUE
        
        IF ( OVERTOP_PIPE == 1 ) THEN
            IF ( HEADCUT ) THEN
                IF ( XHEADCUT > XDWNCORNER ) THEN
                    WIDTHBR = WIDTHBREACH + 2.00 * ( DAMHEIGHT - ZBBREACH ) / BREACHSIDESLOPE
                ELSE
                    WIDTHBR = WIDTHDWNSLOPE + 2.00 * ( DAMHEIGHT - ZBDWNTOE ) / BREACHSIDESLOPE
                END IF
            ELSE
                WIDTHBR = WIDTHBREACH + 2.00 * ( DAMHEIGHT - ZBBREACH ) / BREACHSIDESLOPE
            END IF
        ELSE IF ( OVERTOP_PIPE == 2 ) THEN
            WIDTHBR = WIDTHBREACH + 2.00 * ( DAMHEIGHT - ZBBREACH ) / BREACHSIDESLOPE
        END IF
        
        PRINT*, IT, TIMEMINUSHALFDT, NUMITR

        
        IF ( MOD(IT,10) == 0 ) THEN
            WRITE( 20, 100 ) TIMEMINUSHALFDT/3600.0, FLOWIN, FLOWBREACH, FLOWSPILL+FLOWBREACH, ZSRESVRM, ZSDWNCHAN, ZBBREACH,  &
                             WIDTHBREACH, WIDTHDWNSLOPE, WIDTHBR, BREACHSIDESLOPE, VOLWATEROUT, QTDWNSLOPE, SEDFAILMASS
        END IF
100     FORMAT( 1X,F11.5,1X, 10(F10.4,1X), F13.3,1X,F10.5,1X,F13.5 )
        
        DIFF_FLOWBREACH = ABS(FLOWBREACH1 - FLOWBREACH0)
        TIME = TIME + DT
        IT   = IT  + 1
        ZSRESVR0 = ZSRESVR1
        ZSDOWNSTRM0 = ZSDOWNSTRM1
        FLOWBREACH0 = FLOWBREACH1

        IF (ZSRESVRM>ZBBREACH) THEN
            ISDAMBREACH = 1
        END IF

        IF (IS_NEED_FIND_STARTTIME .AND. FLOWBREACH>0.000001) THEN
            DBTIME_STRAT = TIMEMINUSHALFDT/3600.0
            IS_NEED_FIND_STARTTIME = .FALSE.
            IS_NEED_FIND_ENDTIME = .TRUE.
        END IF 

        IF (IS_NEED_FIND_ENDTIME .AND. DIFF_FLOWBREACH < 0.000001) THEN
            DBTIME_END = TIMEMINUSHALFDT/3600.0  
            IS_NEED_FIND_ENDTIME = .FALSE.           
        END IF

    END DO
    WRITE(20, *) "  ISDAMBREACH, START_TIME, END_TIME, RESVRMID"
    WRITE(20, '(I6, 2F12.4, 2A)') ISDAMBREACH, DBTIME_STRAT, DBTIME_END, "     ", RESVE_ID
    
END PROGRAM DamBreach




SUBROUTINE OPENFILE()
    USE COMM
    OPEN ( UNIT=10, FILE = 'INP.TXT', STATUS = 'OLD'     )
    OPEN ( UNIT=20, FILE = 'OUT.TXT', STATUS = 'UNKNOWN' )
    OPEN ( UNIT=40, FILE = 'FLOWSPILL.TXT', STATUS = 'OLD' )
    OPEN ( UNIT=50, FILE = 'RESVR.TXT', STATUS = 'OLD' )    
END SUBROUTINE OPENFILE




SUBROUTINE DATAREAD                 ! 大坝几何参数
    USE COMM
    IMPLICIT NONE
    INTEGER :: K
    DT = 10
    TIMEBEG = 0.0
    TIMEEND =  86400.0
    RHOW = 1000.0
    AMIU = 0.000001
    READ(10,*)  DAMHEIGHT, DAMCREST, DAMLENGTH, MAXDAMHIGH ! ��ȡ
    BASEFOUNDATION = MAXDAMHIGH - DAMHEIGHT
    SLOPEUP = 0.4
    SLOPEDWN = 0.4
    OVERTOP_PIPE = 1 
    PILOTDEPTH = 0.1 
    PILOTWIDTH = 2 
    MODOVERTOP = 1

    METHODSIDESLOPE = 1 
    BREACHSIDESLOPE0 = 2  
    BREACHLOCATE = 2 
    ZBHARDBOTTOM = 0 
    ANBREACH = 0.057  
    ANDWNSLOPE = 0.057 
    NSEDMOD = 1  
    DIASED = 0.11
    SPEC = 2.65
    PORO = 0.22
    CLAYCONTENT = 0.00
    COHESION = 15500.0
    TANFRICT = 0.90
    ADAPTLAMDA = 6.0
    COEFKD = 0.00
    COEFTAUC = 0.00
    COEFKD  = COEFKD * 0.000001

    READ(10,*) ZSRESVR0 
    ZSDOWNSTRM0 = 0.1
    HEADCUT = .FALSE.
    
    MCOVERBREACH   = 0  
    MCOVERDWNSLOPE = 0  
 
    IUPSTRM = 1 
    METHODRESVR = 1  

    

    IDWNSTRM = 1
    DWNCHANWIDTH = 470.0 
    DWNCHANSLOPE = 0.0018 
    ANDWNCHAN = 0.025 
    
    READ(10,*) NUM_FLOWIN
    DO K = 1, NUM_FLOWIN
        READ(10,*) FLOWINTIME(K), FLOWINDIS(K)
        FLOWINTIME(K) = FLOWINTIME(K) * 3600.00
        FLOWINDIS(K) =  FLOWINDIS(K) 
    END DO 

    
    CALL MUNULREADDATA
    

    
    
    
    RETURN
END SUBROUTINE DATAREAD


SUBROUTINE MUNULREADDATA
    USE COMM
    IMPLICIT NONE
    INTEGER :: I, N, J, DN
    REAL :: COLUM2, COLUM3
    REAL, DIMENSION (1000) :: PICKCOLUM1, PICKCOLUM2
    REAL, DIMENSION (1000) :: PICKCOLUM3, PICKCOLUM4
    CHARACTER(15) ::  COLUM1

    N = 0
    DO I = 1, 2112
        READ(40,*) COLUM1, COLUM2, COLUM3    
        IF (COLUM1 == RESVE_ID) THEN
            N = N + 1
            PICKCOLUM1(N) = COLUM2
            PICKCOLUM2(N) = COLUM3
        END IF 
    END DO
     
    IF (N>0) THEN
        NUM_FLOWSPILL = N
        FLOWSPILLTIME = PICKCOLUM1  - BASEFOUNDATION
        FLOWSPILLDIS  = PICKCOLUM2
    ELSE
        NUM_FLOWSPILL = 2
        FLOWSPILLTIME(1) = 1
        FLOWSPILLDIS(1) = 1
        FLOWSPILLTIME(2) = 1000
        FLOWSPILLDIS(2) = 1        
    END IF 
    
    
    N = 0
    DN = 0
    DO J = 1,12264
        READ(50,*) COLUM1, COLUM2, COLUM3
        IF (COLUM1 == RESVE_ID ) THEN
            N = N + 1
            IF (N==1) CYCLE
            PICKCOLUM3(N-1) = COLUM2
            PICKCOLUM4(N-1) = COLUM3
        END IF         
    END DO 

    IF (N>0) THEN
        NUM_RESVR = N-1
        RESVR_ZS = PICKCOLUM3 - BASEFOUNDATION
        RESVR_AREA  = PICKCOLUM4 * 10000
    ELSE
        NUM_RESVR = 2
        RESVR_ZS(1) = 1
        RESVR_AREA(1) = 1
        RESVR_ZS(2) = 1000
        RESVR_AREA(2) = 1        
    END IF 
 
END SUBROUTINE MUNULREADDATA


SUBROUTINE INITCALC
    USE COMM
    IMPLICIT NONE
    SEDFAILMASS = 0.00
    QTFROMRESVR = 0.00
    VOLWATEROUT = 0.00
    TIME = TIMEBEG + DT
    XUPTOE     = 0.00
    XUPCORNER  = XUPTOE + DAMHEIGHT / SLOPEUP
    XDWNCORNER = XUPCORNER + DAMCREST
    XDWNTOE    = XDWNCORNER + DAMHEIGHT / SLOPEDWN
    ZBUPTOE    = 0.00
    ZBUPCORNER = DAMHEIGHT
    ZBDWNCORNER = DAMHEIGHT
    ZBDWNTOE   = 0.00
    IF ( HEADCUT ) XHEADCUT = XDWNTOE
    IF ( OVERTOP_PIPE == 1 ) THEN
        ZBBREACH = DAMHEIGHT - PILOTDEPTH
        WIDTHBREACH = PILOTWIDTH
        XUPBRINK  = XUPCORNER - PILOTDEPTH / SLOPEUP
        XDWNBRINK = XDWNCORNER + PILOTDEPTH / SLOPEDWN
    ELSE IF ( OVERTOP_PIPE == 2 ) THEN
        ZBBREACH = PILOTELEV - PILOTHEIGHT / 2.00
        WIDTHBREACH = PILOTWIDTH
        HEIGHTBREACH = PILOTHEIGHT
        XUPCENTER = XUPCORNER - ( DAMHEIGHT - PILOTELEV ) / SLOPEUP
        XDWNCENTER = XDWNCORNER + ( DAMHEIGHT - PILOTELEV ) / SLOPEDWN
        XUPBRINK  = XUPCORNER - ( DAMHEIGHT - ZBBREACH ) / SLOPEUP
        XDWNBRINK = XDWNCORNER + ( DAMHEIGHT - ZBBREACH ) / SLOPEDWN
    END IF
    WIDTHDWNSLOPE = WIDTHBREACH
    SLOPEDWN_N = SLOPEDWN
    IF ( METHODSIDESLOPE == 1 ) THEN
        CALL SIDESLOPE(BREACHSIDESLOPE, ZBBREACH, DAMHEIGHT, SPEC, RHOW, PORO, COHESION, TANFRICT)
    ELSE
        BREACHSIDESLOPE = BREACHSIDESLOPE0
    END IF
    SINALPHA = BREACHSIDESLOPE / SQRT( 1.00 + BREACHSIDESLOPE * BREACHSIDESLOPE )
    COSALPHA = SINALPHA / BREACHSIDESLOPE
    BETABREACH0 = 1.00
    BETABREACH  = BETABREACH0
    BETADWNSLOPE = BETABREACH0
    IF ( MODOVERTOP == 3) THEN
        COREUPCORNER = XUPCORNER + DAMCREST / 2.00 + CORELOCATION - CORECREST / 2.00
        COREDWNCORNER = COREUPCORNER + CORECREST
        COREUPTOE = COREUPCORNER - COREHEIGHT / CORESLOPEUP
        COREDWNTOE = COREDWNCORNER + COREHEIGHT / CORESLOPEDWN
        XDWNSLOPBG = XDWNBRINK
        ZDWNSLOPBG = ZBBREACH
        COREUPCORNER_N = COREUPCORNER
        COREDWNCORNER_N = COREDWNCORNER
        SLOPECOREUP = CORESLOPEUP
        SLOPECOREDWN = CORESLOPEDWN
        COREBETABREACH = 1.00
    END IF
    IF ( MCOVERBREACH == 1 .OR. MCOVERDWNSLOPE == 1 ) THEN
        COVERBETABREACH = 1.00
    END IF
    CALL SETTVELOC(AMIU, DIASED, SPEC, WSET)
    IF ( MODOVERTOP == 3) CALL SETTVELOC(AMIU, COREDIASED, CORESPEC, COREWSET)
    ZSDWNCHAN = ZSDOWNSTRM0
    FLOWBREACH0 = 0.00
    QPEAK = 0.00
    WRITE(20,'(A162)' )"Time(hr),Qin(m^3/s),Qbreach,Qspill+breach,zs_reserv,zs_dwnchan, &
                        & zb_breach, B_breach, B_dwnslope,B_breach2,S_brsideslope, &
                        & V_watout, SedDisch, Sed_failmass "
    RETURN
END SUBROUTINE INITCALC




SUBROUTINE SIDESLOPE(BREACHSIDESLOPE, ZBBREACH, DAMHEIGHT, SPEC, RHOW, PORO, COHESION, TANFRICT)
    IMPLICIT NONE
    REAL :: BREACHSIDESLOPE, ZBBREACH, DAMHEIGHT, SPEC, RHOW, PORO, COHESION, TANFRICT
    REAL :: FOURCGAMAH, TANFRICT2, CTGBETA, SQRTRW, FAILUREANGLE, GAMAS
    GAMAS = ( SPEC * ( 1.00 - PORO ) + 0.50 * PORO ) * RHOW * 9.81
    FOURCGAMAH = 4.0 * COHESION / GAMAS / MAX( DAMHEIGHT-ZBBREACH, 0.001 )
    TANFRICT2 = TANFRICT * TANFRICT
    SQRTRW = SQRT((FOURCGAMAH*FOURCGAMAH+2.0*FOURCGAMAH*TANFRICT)*(1.0+TANFRICT2))
    CTGBETA = ( FOURCGAMAH + TANFRICT - SQRTRW ) / TANFRICT2
    IF ( CTGBETA > 0.00000001 ) THEN
        FAILUREANGLE = 0.50 * ( 1.00 + TANFRICT * CTGBETA ) / ( 0.5 * FOURCGAMAH + CTGBETA )
        BREACHSIDESLOPE = TAN(MIN(1.5707, 0.5*(ATAN(1.0/CTGBETA)+ATAN(FAILUREANGLE))))
    ELSE IF ( CTGBETA >= -0.00000001 ) THEN
        FAILUREANGLE = 0.50 * ( 1.00 + TANFRICT * CTGBETA ) / ( 0.5 * FOURCGAMAH + CTGBETA )
        BREACHSIDESLOPE = TAN(MIN(1.5707, 0.5*(1.5707+ATAN(FAILUREANGLE))))
    ELSE IF ( CTGBETA > -FOURCGAMAH/2.0+0.00000001 ) THEN
        FAILUREANGLE = 0.50 * ( 1.00 + TANFRICT * CTGBETA ) / ( 0.5 * FOURCGAMAH + CTGBETA )
        IF ( FAILUREANGLE > 0.00000001 ) THEN
            BREACHSIDESLOPE = TAN(MIN(1.5707, 0.5*(3.1415+ATAN(1.0/CTGBETA)+ATAN(FAILUREANGLE))))
        ELSE
            BREACHSIDESLOPE = 100000000.00
        END IF
    ELSE
        BREACHSIDESLOPE = 100000000.00
    END IF
    RETURN
END SUBROUTINE SIDESLOPE




SUBROUTINE SETTVELOC(AMIU, DIASED, SPEC, WSET)
    IMPLICIT NONE
    REAL :: AMIU, DIASED, SPEC, WSET
    REAL :: FSHAPE, COEFWUM, COEFWUN, EXPONWU, AMIUD, DSTAR
    AMIUD = AMIU / DIASED
    FSHAPE = 0.70
    COEFWUM = 53.5 * EXP( -0.65 * FSHAPE )
    COEFWUN = 5.65 * EXP( -2.50 * FSHAPE )
    EXPONWU = 0.70 + 0.90 * FSHAPE
    DSTAR = DIASED * ( ( SPEC - 1.00 )*9.81 )**0.3333 / AMIU**0.6667
    WSET = COEFWUM * AMIUD / COEFWUN
    WSET = WSET * ( SQRT(0.25+(1.3333*COEFWUN*DSTAR**3/COEFWUM**2)**(1.0/EXPONWU))-0.5)**EXPONWU
    RETURN
END SUBROUTINE SETTVELOC




SUBROUTINE INTERPOLAT(XX, FF, VARX, VARF, NUM)
    IMPLICIT NONE
    INTEGER :: NUM, K
    REAL :: XX, FF
    REAL, DIMENSION ( NUM ) :: VARX, VARF
    IF ( XX < VARX(1) ) THEN
        FF = VARF(1)
    ELSE IF ( XX > VARX(NUM) ) THEN
        FF = VARF(NUM)
    ELSE
        DO K = 1, NUM - 1
            IF ( XX >= VARX(K) .AND. XX < VARX(K+1) ) THEN
                FF = VARF(K)+(XX-VARX(K))*(VARF(K+1)-VARF(K))/(VARX(K+1)-VARX(K))
            END IF
        END DO
    END IF
    RETURN
END SUBROUTINE INTERPOLAT




SUBROUTINE BREACHFLOW( ZSRESVRM, ZSDWNCHANM, ERROR  )
    USE COMM
    use ieee_arithmetic, only: ieee_is_nan
    IMPLICIT NONE
    REAL :: ZSRESVRM, ZSDWNCHANM, ERROR
    REAL :: ALPHASM, FLOWBREACHX
    REAL :: AREABREACH, PERIBREACH, RADIBREACH, REYNBREACH, ROUGBREACH, HEADLOSS
    FLOWBREACHX = FLOWBREACH1
    IF ( OVERTOP_PIPE == 1 ) THEN
        IF ( ZSRESVRM > ZBBREACH .AND. ZSRESVRM > ZSDWNCHANM ) THEN
            CALL SUBMERGENCE( ZSRESVRM, ZSDWNCHANM, ALPHASM )
            FLOWBREACH1 = ALPHASM * ( COEFB * WIDTHBREACH * ( ZSRESVRM - ZBBREACH )**1.50 &
                                + COEFS / BREACHSIDESLOPE * ( ZSRESVRM - ZBBREACH )**2.50 )

            IF ( ZSRESVRM > DAMHEIGHT ) THEN
                FLOWSPILL = FLOWSPILL0 + COEFB * &
                                MAX( 0.0, DAMLENGTH - WIDTHBREACH - 2.0 * ( ZSRESVRM - ZBBREACH ) / BREACHSIDESLOPE ) * &
                                        ( ZSRESVRM - DAMHEIGHT ) ** 1.50
            ELSE
               FLOWSPILL = FLOWSPILL0
            END IF
         ELSE
            FLOWBREACH1 = 0.0
            FLOWSPILL  = FLOWSPILL0
         END IF
    ELSE IF ( OVERTOP_PIPE == 2 ) THEN
        IF ( ZSRESVRM > ZBBREACH .AND. ZSRESVRM > ZSDWNCHANM ) THEN
            IF ( ZSRESVRM > ZBBREACH + HEIGHTBREACH ) THEN
                AREABREACH = WIDTHBREACH * HEIGHTBREACH
                PERIBREACH = 2.0 * ( WIDTHBREACH + HEIGHTBREACH )
                RADIBREACH = AREABREACH / PERIBREACH
                REYNBREACH = FLOWBREACH / AREABREACH * ( 4.0 * RADIBREACH ) / AMIU
                ROUGBREACH = DIASED / ( 4.0 * RADIBREACH )
                FRICTIONFACTOR = 0.25 / ( ALOG10( ROUGBREACH/3.7 &
                                                + 5.74 / ( MAX(4000.0,REYNBREACH))**0.9 ) )**2
                HEADLOSS = HEADLOSSLOC + FRICTIONFACTOR * ( XDWNCENTER - XUPCENTER ) / ( 4.0 * RADIBREACH )
                HEADLOSS = HEADLOSS + 1.00
                FLOWBREACH1  = AREABREACH * SQRT( 2.0 * 9.81 * &
                           ( ZSRESVRM - MAX( ZBBREACH + HEIGHTBREACH/2.0, ZSDWNCHANM)) / HEADLOSS )
            ELSE
                CALL SUBMERGENCE( ZSRESVRM, ZSDWNCHANM, ALPHASM )
                FLOWBREACH1 = ALPHASM * ( COEFB * WIDTHBREACH * ( ZSRESVRM - ZBBREACH )**1.50 )
            END IF
            IF ( ZSRESVRM > DAMHEIGHT ) THEN
                FLOWSPILL = FLOWSPILL0 + COEFB * DAMLENGTH * ( ZSRESVRM - DAMHEIGHT )**1.50 
            ELSE
                FLOWSPILL = FLOWSPILL0
            END IF
         ELSE
            FLOWBREACH1 = 0.0
            FLOWSPILL  = FLOWSPILL0
         END IF
    END IF
    ERROR = ABS( FLOWBREACH1 - FLOWBREACHX )
    FLOWBREACH1 = RELAX * FLOWBREACH1 + ( 1.0 - RELAX) * FLOWBREACHX
    RETURN
END SUBROUTINE BREACHFLOW




SUBROUTINE SUBMERGENCE( ZSRESVRM, ZSDWNCHANM, ALPHASM )
    USE COMM
    IMPLICIT NONE
    REAL :: ZSRESVRM, ZSDWNCHANM, ALPHASM
    REAL :: CONSM
    CONSM = ( ZSDWNCHANM - ZBBREACH ) / ( ZSRESVRM - ZBBREACH )
    IF ( CONSM <= 0.67 ) THEN
        ALPHASM = 1.00
    ELSE
        ALPHASM =  1.00 - 27.82647 * ( CONSM - 0.67 )**3.0
        IF ( ALPHASM < 0.00 ) ALPHASM = 0.00
    END IF
    IF ( CONSM > 1.00 ) ALPHASM = 0.00
    RETURN
END SUBROUTINE SUBMERGENCE




SUBROUTINE CRITFLOWTRAPZ( Q, WIDTH, DEPTH, AREA, RADI, SIDESLOPE )
    IMPLICIT NONE
    REAL :: Q, WIDTH, DEPTH, AREA, RADI, SIDESLOPE
    REAL :: DEPTH1, DEPTHM, SINALPHASIDE
    REAL :: CFLW, DEPTHU, CFUP, CFMD, DEPTHCRIT
    SINALPHASIDE = SIDESLOPE / SQRT( 1.00 + SIDESLOPE * SIDESLOPE )
    DEPTH1 = 0.000001
    CFLW = Q * Q * ( WIDTH + 2.0 * DEPTH1 / SIDESLOPE ) / 9.81 &
            / ( WIDTH * DEPTH1 + DEPTH1 * DEPTH1 / SIDESLOPE ) ** 3.0 - 1.0
    DO
        DEPTHU = DEPTH1 + 0.1
        CFUP = Q * Q * ( WIDTH + 2.0 * DEPTHU / SIDESLOPE ) / 9.81 &
                / ( WIDTH * DEPTHU + DEPTHU * DEPTHU / SIDESLOPE ) ** 3.0 - 1.0
        IF ( CFLW * CFUP < 0.00 ) EXIT
        DEPTH1 = DEPTHU
        CFLW = CFUP
    END DO
    DO WHILE ( ABS( DEPTH1 - DEPTHU ) / DEPTH1 > 0.00001 )
        DEPTHM = 0.50 * ( DEPTH1 + DEPTHU )
        CFMD = Q * Q * ( WIDTH + 2.0 * DEPTHM / SIDESLOPE ) / 9.81 &
                / ( WIDTH * DEPTHM + DEPTHM * DEPTHM / SIDESLOPE ) ** 3.0 - 1.0
        IF ( CFMD * CFUP > 0.00 ) THEN
            DEPTHU = DEPTHM
            CFUP = CFMD
        ELSE
            DEPTH1 = DEPTHM
            CFLW = CFMD
        END IF
    END DO
    DEPTHCRIT = 0.50 * ( DEPTH1 + DEPTHU )
    DEPTH = DEPTHCRIT
    AREA = WIDTH * DEPTH + DEPTH * DEPTH / SIDESLOPE
    RADI = AREA / ( WIDTH + 2.0 * DEPTH / SINALPHASIDE )
    RETURN
END SUBROUTINE CRITFLOWTRAPZ




SUBROUTINE FLOWTRAPZ(Q, WIDTH, SLOPE, AN, DEPTH, AREA, RADI, SIDESLOPE)
    IMPLICIT NONE
    REAL :: Q, WIDTH, SLOPE, AN, DEPTH, AREA, RADI, SIDESLOPE
    REAL :: SINALPHASIDE, DEPTH1, CONV, FLW, FUP, DEPTHM, FMD, DEPTHNORM
    REAL :: CFLW, DEPTHU, CFUP, CFMD, DEPTHCRIT
    SINALPHASIDE = SIDESLOPE / SQRT( 1.00 + SIDESLOPE * SIDESLOPE )
    IF ( SLOPE < 0.000000001 ) THEN
        DEPTHNORM = 1000000000.0
        GOTO 201
    END IF
    DEPTH1 = 0.000001
    CONV = ( WIDTH * DEPTH1 + DEPTH1 * DEPTH1 / SIDESLOPE )**1.66667    &
            / ( WIDTH + 2.00 * DEPTH1 / SINALPHASIDE )**0.6667 / AN
    FLW = Q - CONV * SQRT( SLOPE )
    DO
        DEPTHU = DEPTH1 + 0.1
        CONV = ( WIDTH * DEPTHU + DEPTHU * DEPTHU / SIDESLOPE )**1.66667    &
                / ( WIDTH + 2.00 * DEPTHU / SINALPHASIDE )**0.6667 / AN
        FUP = Q - CONV * SQRT( SLOPE )
        IF ( FLW * FUP < 0.00 ) EXIT
        DEPTH1 = DEPTHU
        FLW = FUP
    END DO
    DO WHILE ( ABS( DEPTH1 - DEPTHU ) / DEPTH1 > 0.00001 )
        DEPTHM = 0.50 * ( DEPTH1 + DEPTHU )
        CONV = ( WIDTH * DEPTHM + DEPTHM * DEPTHM / SIDESLOPE )**1.66667    &
                / ( WIDTH + 2.00 * DEPTHM / SINALPHASIDE )**0.6667 / AN
        FMD = Q - CONV * SQRT( SLOPE )
        IF ( FMD * FUP > 0.00 ) THEN
            DEPTHU = DEPTHM
            FUP = FMD
        ELSE
            DEPTH1 = DEPTHM
            FLW = FMD
        END IF
    END DO
    DEPTHNORM = 0.50 * ( DEPTH1 + DEPTHU )
201 CONTINUE
    DEPTH1 = 0.000001
    CFLW = Q * Q * ( WIDTH + 2.0 * DEPTH1 / SIDESLOPE ) / 9.81 &
            / ( WIDTH * DEPTH1 + DEPTH1 * DEPTH1 / SIDESLOPE ) ** 3.0 - 1.0
    DO
        DEPTHU = DEPTH1 + 0.1
        CFUP = Q * Q * ( WIDTH + 2.0 * DEPTHU / SIDESLOPE ) / 9.81 &
                / ( WIDTH * DEPTHU + DEPTHU * DEPTHU / SIDESLOPE ) ** 3.0 - 1.0
        IF ( CFLW * CFUP < 0.00 ) EXIT
        DEPTH1 = DEPTHU
        CFLW = CFUP
    END DO
    DO WHILE ( ABS( DEPTH1 - DEPTHU ) / DEPTH1 > 0.00001 )
        DEPTHM = 0.50 * ( DEPTH1 + DEPTHU )
        CFMD = Q * Q * ( WIDTH + 2.0 * DEPTHM / SIDESLOPE ) / 9.81 &
                / ( WIDTH * DEPTHM + DEPTHM * DEPTHM / SIDESLOPE ) ** 3.0 - 1.0
        IF ( CFMD * CFUP > 0.00 ) THEN
            DEPTHU = DEPTHM
            CFUP = CFMD
        ELSE
            DEPTH1 = DEPTHM
            CFLW = CFMD
        END IF
    END DO
    DEPTHCRIT = 0.50 * ( DEPTH1 + DEPTHU )
    DEPTH = MIN(DEPTHNORM, DEPTHCRIT)
    AREA = WIDTH * DEPTH + DEPTH * DEPTH / SIDESLOPE
    RADI = AREA / ( WIDTH + 2.0 * DEPTH / SINALPHASIDE )
    RETURN
END SUBROUTINE FLOWTRAPZ




SUBROUTINE SEDSAND(Q, AREA, WIDTH, RADI, SLOPE, AN, DIASED, SPEC, WSET, PORO, QTSTAR, REPOSE, BREACHLOCATE) 
    IMPLICIT NONE
    REAL :: Q, AREA, WIDTH, RADI, SLOPE, AN, DIASED, SPEC, WSET, PORO, QTSTAR, REPOSE, BREACHLOCATE
    REAL :: CQB, USTARCR2, UV, U3GHW, DUNE, USTAR2, ALAMDA
    REAL :: QSSTAR, QBSTAR, QTSTARLIMIT
    CQB = SQRT( ( SPEC - 1.0 ) * 9.81* DIASED**3.0 )
    USTARCR2 = 0.03 * ( SPEC - 1.0 ) * 9.81 * DIASED
    UV = Q / AREA
    U3GHW = UV ** 3.0 / 9.81 / RADI / WSET
    QSSTAR = Q * 0.05 * U3GHW ** 1.5 / ( 1.0 + ( U3GHW / 45.0 )**1.15 ) / SPEC / 1000.0
    QSSTAR = QSSTAR * ( ( AREA / RADI - WIDTH) * BREACHLOCATE / 2.0 + WIDTH )/( AREA / RADI )
    USTAR2 = AN ** 2.0 * 9.81 * UV ** 2.0 / RADI ** 0.33333
    IF ( SLOPE > 0.00 ) THEN
        ALAMDA = 1.0 + 0.22 * ( USTAR2 / USTARCR2 )**0.15 * EXP( 2.0 * ABS( SLOPE / REPOSE ) )
    ELSE
        ALAMDA = 1.0
    END IF
    USTAR2 = USTAR2 + ALAMDA * USTARCR2 * SLOPE / REPOSE
    DUNE = MIN( 1.0, (DIASED**0.1666667/20.0/AN)**1.5 )
    QBSTAR = 0.0053 * CQB * ( MAX( 0.0, DUNE*USTAR2/USTARCR2 - 1.0) ) ** 2.2
    QTSTAR = QBSTAR * WIDTH + QSSTAR
    QTSTARLIMIT = 0.99 * Q * ( 1.0 - PORO )
    IF ( QTSTAR > QTSTARLIMIT ) QTSTAR = QTSTARLIMIT
    RETURN
END SUBROUTINE SEDSAND




SUBROUTINE SEDCLAY( Q, AREA, RADI, AN, RHOW, COEFKD, COEFTAUC, DZBDT)
    IMPLICIT NONE
    REAL :: Q, AREA, RADI, AN, RHOW, COEFKD, COEFTAUC, DZBDT
    REAL :: UV, TAU
    UV = Q / AREA  
    TAU = 9.81 * RHOW * AN * AN * UV * UV / ( RADI ** 0.333333 )
    DZBDT = COEFKD * ( TAU - COEFTAUC )
    IF ( DZBDT < 0.00 ) DZBDT = 0.00
    RETURN
END SUBROUTINE SEDCLAY





SUBROUTINE PIPETOPSTAB( ZSRESVRM )
    USE COMM
    IMPLICIT NONE
    REAL :: ZSRESVRM
    REAL :: XUPTOP, XDWNTOP, TOPBOTLENGTH, TOPHEIGHT, TOPHEIGHTWET, TOPAREA, TOPAREAWET
    REAL :: DRIVINGVERT, RESISTVERT, DRIVINGHORIZON, RESISTHORIZON
    XUPTOP = XUPBRINK + HEIGHTBREACH / SLOPEUP
    XDWNTOP = XDWNBRINK - HEIGHTBREACH / SLOPEDWN
    TOPBOTLENGTH = XDWNTOP - XUPTOP
    TOPHEIGHT = DAMHEIGHT - HEIGHTBREACH - ZBBREACH
    TOPHEIGHTWET = MIN( ZSRESVRM, DAMHEIGHT ) - HEIGHTBREACH - ZBBREACH
    TOPAREA = 0.5 * ( DAMCREST + TOPBOTLENGTH ) * TOPHEIGHT
    TOPAREAWET = 0.5 * TOPBOTLENGTH * MAX(0.0, TOPHEIGHTWET)
    !!///SUNNY EVENT///!!
    !DRIVINGVERT = RHOW * 9.81 * SPEC * (1.0-PORO) * ( TOPAREA - TOPAREAWET )  &
    !              + RHOW * 9.81 * ( SPEC * (1.0-PORO) + PORO ) * TOPAREAWET  &
    !              + RHOW * 9.81 * 0.5 * TOPHEIGHTWET**2 / SLOPEUP
    !!///RAINY EVENT///!!
    DRIVINGVERT = RHOW * 9.81 * ( SPEC * (1.0 - PORO) + PORO ) * TOPAREA  &
                  + RHOW * 9.81 * 0.5 * TOPHEIGHTWET**2 / SLOPEUP
    DRIVINGVERT = DRIVINGVERT * WIDTHBREACH
    RESISTVERT = 2.0 * TOPAREA * COHESION
    IF ( DRIVINGVERT > RESISTVERT ) THEN
        OVERTOP_PIPE = 1
        MODOVERTOP = 1
        SEDFAILMASS = SEDFAILMASS + TOPAREA * WIDTHBREACH * RHOW * SPEC * ( 1.0 - PORO ) / 1000.0
    END IF
    DRIVINGHORIZON = 0.5 * RHOW * 9.81 * TOPHEIGHTWET * TOPHEIGHTWET * WIDTHBREACH
    RESISTHORIZON = 2.0 * TOPAREA * COHESION
    IF ( DRIVINGHORIZON > RESISTHORIZON ) THEN
        OVERTOP_PIPE = 1
        MODOVERTOP = 1
        SEDFAILMASS = SEDFAILMASS + TOPAREA * WIDTHBREACH * RHOW * SPEC * ( 1.0 - PORO ) / 1000.0
    END IF
    RETURN
END SUBROUTINE PIPETOPSTAB




SUBROUTINE CLAYCORESTAB(ZSRESVRM, DEPTHBREACH, AREABREACH, RADIBREACH)    ! 心墙坝溃坝模型
    USE COMM
    IMPLICIT NONE
    REAL :: ZSRESVRM, DEPTHBREACH, AREABREACH, RADIBREACH 
    REAL :: TAUBREACH, HK, RESHK, COEFK0, CORETOPLEN, COREBOTLEN, CORETOPAREA
    REAL :: WIDTH0, SHEARFORCE, WATERPRESS, EARTHPRESS, DRIVINGHORIZON, OVERTURNMOMENT
    REAL :: COHESIONFORCE, WEIGHT, RESISTHORIZON, RESISTMOMENT
    REAL :: XCOREUPSLOPBG
    REAL :: RATIOCORE, RATIOCORE1
    REAL :: FAILTOPLEN, XFAILUPSLOP, FAILBOTLEN, FAILTOPAREA
    TAUBREACH = RHOW * ANCORE**2.0 * 9.81 * ( FLOWBREACH/AREABREACH )**2.0 / RADIBREACH**0.3333333
    HK = ZBBREACH - ZDWNSLOPBG
    RESHK = ZSRESVRM - ZDWNSLOPBG
    COEFK0 = 1.0       
    CORETOPLEN = COREDWNCORNER_N - COREUPCORNER_N
    XCOREUPSLOPBG = COREUPTOE + ( COREUPCORNER - COREUPTOE ) * MIN( 1.0, ZDWNSLOPBG/COREHEIGHT )
    COREBOTLEN = XDWNSLOPBG - XCOREUPSLOPBG
    CORETOPAREA = 0.5 * HK * ( CORETOPLEN + COREBOTLEN )
    WIDTH0 = WIDTHBREACH
    SHEARFORCE = TAUBREACH * WIDTHBREACH * CORETOPLEN
    WATERPRESS = RHOW * 9.81 * WIDTH0 * HK * ( RESHK - 0.5 * HK )      
    EARTHPRESS = 0.5 * COEFK0 * RHOW * SPEC * ( 1.0 - PORO ) * 9.81 * WIDTH0 * HK ** 2.0
    DRIVINGHORIZON = SHEARFORCE + WATERPRESS + EARTHPRESS
    COHESIONFORCE = ( 2.0 * CORETOPAREA + COREBOTLEN * WIDTH0 ) * CORECOHESION
    WEIGHT = ( CORETOPAREA * ( CORESPEC * ( 1.0 - COREPORO ) + COREPORO )   &
                + 0.5 * HK * ( COREUPCORNER_N - XCOREUPSLOPBG ) * ( SPEC * ( 1.0 - PORO ) + PORO )  &
                + DEPTHBREACH * ( COREDWNCORNER_N - XCOREUPSLOPBG ) )   &
                * WIDTH0 * RHOW * 9.81
    RESISTHORIZON = COHESIONFORCE + WEIGHT * CORETANFRICT
    OVERTURNMOMENT = SHEARFORCE * HK + WATERPRESS * ( 0.5*HK - HK * HK / 12.0 )     &
                                     + EARTHPRESS * ( 0.5*HK - HK * HK / 12.0 )
    RESISTMOMENT = 2.0 * CORETOPAREA * CORECOHESION * ( 0.5 * HK - HK * HK /12.0 )  &
                    + ( COREBOTLEN * WIDTH0 * CORECOHESION + WEIGHT ) * 0.5 * COREBOTLEN
    IF ( DRIVINGHORIZON > RESISTHORIZON .OR. OVERTURNMOMENT > RESISTMOMENT ) THEN
        FAILTOPLEN = COREDWNCORNER_N - XUPBRINK
        XFAILUPSLOP = XUPTOE + ( XUPCORNER - XUPTOE ) * MIN( 1.0, ZDWNSLOPBG/DAMHEIGHT )
        FAILBOTLEN = XDWNSLOPBG - XFAILUPSLOP
        FAILTOPAREA = 0.5 * HK * ( CORETOPLEN + COREBOTLEN )
        SEDFAILMASS = SEDFAILMASS + FAILTOPAREA * WIDTH0 * RHOW * SPEC * ( 1.0 - PORO ) / 1000.00
        XDWNBRINK = XDWNSLOPBG
        ZBBREACH = ZDWNSLOPBG
        XUPBRINK = XUPTOE + ( XUPCORNER - XUPTOE ) * ZBBREACH / DAMHEIGHT
        MODOVERTOP = 1
        RATIOCORE = 0.5 * ( COREDWNCORNER - COREUPCORNER + COREDWNTOE - COREUPTOE ) * COREHEIGHT &
                        / ( 0.5 * ( XDWNCORNER - XUPCORNER + XDWNTOE - XUPTOE) * DAMHEIGHT )
        RATIOCORE1 = 1.00 - RATIOCORE
        PORO = RATIOCORE * COREPORO + RATIOCORE1 * PORO
        SPEC = RATIOCORE * CORESPEC + RATIOCORE1 * SPEC            
        CALL SETTVELOC( AMIU, DIASED, SPEC, WSET )
        COHESION = RATIOCORE * CORECOHESION + RATIOCORE1 * COHESION
        TANFRICT = RATIOCORE * CORETANFRICT + RATIOCORE1 * TANFRICT
        CLAYCONTENT = RATIOCORE * CORECLAYCONTENT + RATIOCORE1 * CLAYCONTENT
        ANBREACH = RATIOCORE * ANCORE + RATIOCORE1 * ANBREACH
        IF ( METHODSIDESLOPE == 1 ) THEN
            CALL SIDESLOPE( BREACHSIDESLOPE, ZBBREACH, DAMHEIGHT, SPEC, RHOW, PORO, COHESION, TANFRICT )
        END IF
    END IF
    RETURN
END SUBROUTINE CLAYCORESTAB




SUBROUTINE HEADCUTSTAB(ZSRESVRM, DEPTHBREACH, AREABREACH, RADIBREACH)
    USE COMM
    IMPLICIT NONE
    REAL :: ZSRESVRM, DEPTHBREACH, AREABREACH, RADIBREACH
    REAL :: HEADAREA, XHEADHEIGHT, TAUBREACH, DRIVINGHORIZON, RESISTHORIZON
    HEADAREA = 0.00
    IF ( XHEADCUT > XDWNBRINK ) THEN
        XHEADHEIGHT = ZBBREACH * ( XHEADCUT - XDWNBRINK ) / ( XDWNTOE - XDWNBRINK )
        HEADAREA = 0.5 * ( XHEADHEIGHT + ZBBREACH ) * ( XHEADCUT - XDWNBRINK )  &
                    + ( XDWNBRINK - XUPBRINK ) * ZBBREACH + 0.5 * ( XUPBRINK - XUPTOE ) * ZBBREACH
    ELSE IF ( XHEADCUT > XUPBRINK .AND. XHEADCUT <= XDWNBRINK ) THEN
        HEADAREA = ( XHEADCUT - XUPBRINK ) * ZBBREACH + 0.5 * ( XUPBRINK - XUPTOE ) * ZBBREACH
    ELSE IF ( XHEADCUT <= XUPBRINK ) THEN
        HEADAREA = 0.5 * ( XHEADCUT - XUPTOE ) * ZBBREACH
    END IF
    TAUBREACH = RHOW * ANBREACH ** 2.0 * 9.81 * ( FLOWBREACH/AREABREACH ) ** 2.0 / RADIBREACH ** 0.333333
    DRIVINGHORIZON = TAUBREACH * WIDTHBREACH * ( XHEADCUT - XUPBRINK )  &
                        + RHOW * 9.81* WIDTHBREACH * ( ZBBREACH * ( ZSRESVRM - 0.5 * ZBBREACH ) - 0.5 * ZSDWNCHAN ** 2.0 )
    RESISTHORIZON =  ( 2.0 * HEADAREA + ( XHEADCUT - XUPTOE ) * WIDTHBREACH ) * COHESION    &
                    + TANFRICT * ( HEADAREA * ( SPEC * ( 1.0 - PORO) + PORO )   &
                    + 0.5 * ( 2.0 * ZSRESVRM - ZBBREACH ) * ( XUPBRINK - XUPTOE )   &
                    + DEPTHBREACH * ( XHEADCUT - XUPBRINK ) ) * 9.81 * RHOW * WIDTHBREACH
    IF ( DRIVINGHORIZON > RESISTHORIZON ) THEN
        SEDFAILMASS = SEDFAILMASS + HEADAREA * WIDTHBREACH * RHOW * SPEC * ( 1.0 - PORO ) / 1000.00
        XHEADCUT = XUPTOE
        XUPBRINK = XUPTOE
        XDWNBRINK = XUPTOE
        ZBBREACH = 0.00001
        MODOVERTOP = 1
        HEADCUT = .FALSE.
        IF ( METHODSIDESLOPE == 1 ) THEN
            CALL SIDESLOPE( BREACHSIDESLOPE, ZBBREACH, DAMHEIGHT, SPEC, RHOW, PORO, COHESION, TANFRICT )
        END IF
    END IF
    RETURN
END SUBROUTINE HEADCUTSTAB

SUBROUTINE SOILMOVE( ZSRESVRM )   ! 均质坝溃坝模型
    USE COMM
    IMPLICIT NONE
    REAL :: ZSRESVRM
    INTEGER :: MCLAYCORE
    REAL :: DEPTHBREACH, AREABREACH, RADIBREACH, DAMHEIGHT_ZBBREACH
    REAL :: QTSTARBREACH, X_ADAPTLEN, ADAPTLEN, EROSIONBREACH
    REAL :: DZBDTBREACH, ABEDBREACH, ASIDEBREACH, ATOTALBREACH
    REAL :: DZBBREACH, DZBBREACHBOTM, DZBCBOTM
    REAL :: DEPTHFC, DEPTHC, DEPTHF, RATIOF, DEPTHE, RATIOE, ATOTAL, DZBC
    REAL :: XDWNBRINKTEMP, SINSLOPE, DEPTHDWNSLOPE, AREADWNSLOPE, RADIDWNSLOPE
    REAL :: QTSTARDWNSLOPE, EROSIONDWNSLOPE, DZBDTDOWNSLOPE, ABED, ABEDSIDE, ASIDE
    REAL :: ANBREACHF, DZBBREACHTOP, DZBBREACHSIDE
    REAL :: DXDT, DX, ZHEADCUT, ZDSHEADCUT, DWIDTHDWNSLOPE
    REAL :: ZBDWNBRINK, DISBRINK, XDWNBRINK0, ASIDEUP
    REAL :: COEFC, AQH, AQH0
    REAL :: COREDWNSINSLOPE, COREDWNCOSSLOPE, COREDWNLENSLOPE, DEPTHCOREDWNSLOPE, AREACOREDWNSLOPE, RADICOREDWNSLOPE
    REAL :: DZBDTCOREDWNSLOPE, QTSTARCOREDWNSLOPE, QTCOREDWNSLOPE, DSCOREUPCORNER_N, EROSIONCOREDWNSLOPE
    IF ( OVERTOP_PIPE == 1 ) THEN
        CALL CRITFLOWTRAPZ( FLOWBREACH, WIDTHBREACH, DEPTHBREACH, AREABREACH, RADIBREACH, BREACHSIDESLOPE )
        DAMHEIGHT_ZBBREACH = DAMHEIGHT - ZBBREACH
        IF ( XDWNBRINK > XUPBRINK + 0.01 * DAMHEIGHT ) THEN
            IF ( MCOVERBREACH == 1 ) THEN
                IF ( METHODSIDESLOPE == 1 ) THEN
                    CALL SIDESLOPE( BREACHSIDESLOPE, ZBBREACH, DAMHEIGHT, SPEC, RHOW, PORO, COHESION, TANFRICT )
                ELSE
                    BREACHSIDESLOPE = COVERBREACHSIDESLOPE
                END IF
                BETABREACH = COVERBETABREACH
                CALL SEDCLAY( FLOWBREACH, AREABREACH, RADIBREACH, COVERANBREACH, RHOW, COVERCOEFKD, COVERCOEFTAUC, DZBDTBREACH )
                EROSIONBREACH = DZBDTBREACH * DT * ( XDWNBRINK - XUPBRINK ) &
                                * ( WIDTHBREACH + BETABREACH * ( AREABREACH / RADIBREACH - WIDTHBREACH )    &
                                                                * BREACHLOCATE / 2.0 )
                QTBREACH = QTFROMRESVR + EROSIONBREACH * ( 1.00 - COVERPORO ) / DT
                DZBBREACH = DZBDTBREACH * DT
                WIDTHBREACH = WIDTHBREACH + BREACHLOCATE * DZBBREACH &
                                            * ( MAX(BETABREACH/SINALPHA, 1.0/BREACHSIDESLOPE) &
                                                - 1.00 / BREACHSIDESLOPE )
                WIDTHBREACH = MIN( WIDTHBREACH, DAMLENGTH )
                ZBBREACH = ZBBREACH - DZBBREACH
                XUPBRINK = XUPBRINK - DZBBREACHBOTM / SLOPEUP
                XDWNBRINK = XDWNBRINK + DZBBREACHBOTM / SLOPEDWN_N
                COVERTHICKBREACH = COVERTHICKBREACH - DZBBREACH
                IF ( COVERTHICKBREACH <= 0.00 ) MCOVERBREACH = 0
            ELSE
                MCLAYCORE = 0
                IF ( MODOVERTOP == 3 ) THEN
                    IF ( ZBBREACH <= COREHEIGHT ) MCLAYCORE = 1
                END IF
                IF ( MCLAYCORE == 0 ) THEN
                    IF ( METHODSIDESLOPE == 1 ) THEN
                        CALL SIDESLOPE( BREACHSIDESLOPE, ZBBREACH, DAMHEIGHT, SPEC, RHOW, PORO, COHESION, TANFRICT )
                    ELSE
                        BREACHSIDESLOPE = BREACHSIDESLOPE0
                    END IF
                    BETABREACH = BETABREACH0
                    IF ( NSEDMOD == 1 ) THEN
                        CALL SEDSAND(FLOWBREACH, AREABREACH, WIDTHBREACH, RADIBREACH, 0.0, &
                                        ANBREACH, DIASED, SPEC, WSET, PORO, QTSTARBREACH, BREACHSIDESLOPE, BREACHLOCATE)
                        ADAPTLEN = ADAPTLAMDA * ( WIDTHBREACH + 2.0 * DEPTHBREACH / BREACHSIDESLOPE )
                        X_ADAPTLEN = MIN ( 30.0, (XDWNBRINK - XUPBRINK ) / ADAPTLEN )
                        QTBREACH = QTSTARBREACH + ( QTFROMRESVR - QTSTARBREACH ) / EXP( X_ADAPTLEN )
                        EROSIONBREACH = DT * ( QTBREACH - QTFROMRESVR ) / ( 1.0 - PORO )
                    ELSE IF ( NSEDMOD == 2 ) THEN
                        CALL SEDCLAY( FLOWBREACH, AREABREACH, RADIBREACH, ANBREACH, RHOW, COEFKD, COEFTAUC, DZBDTBREACH ) 
                        EROSIONBREACH = DZBDTBREACH * DT * ( XDWNBRINK - XUPBRINK ) &
                                        * ( WIDTHBREACH + BETABREACH * ( AREABREACH / RADIBREACH - WIDTHBREACH )    &
                                                                * BREACHLOCATE / 2.0 )
                        QTBREACH = QTFROMRESVR + EROSIONBREACH * ( 1.00 - PORO ) / DT
                    END IF
                END IF
                IF ( MCLAYCORE == 1 ) THEN
                    IF ( METHODSIDESLOPE == 1 ) THEN
                        CALL SIDESLOPE( BREACHSIDESLOPE, ZBBREACH, DAMHEIGHT, SPEC, RHOW, PORO, COHESION, TANFRICT )
                    ELSE
                        BREACHSIDESLOPE = COREBREACHSIDESLOPE
                    END IF
                    BETABREACH = COREBETABREACH
                    IF ( NSEDMODCORE == 1 ) THEN
                        CALL SEDSAND(FLOWBREACH, AREABREACH, WIDTHBREACH, RADIBREACH, 0.0, &
                                        ANCORE, COREDIASED, CORESPEC, COREWSET, &
                                        COREPORO, QTSTARBREACH, BREACHSIDESLOPE, BREACHLOCATE)
                        ADAPTLEN = ADAPTLAMDA * ( WIDTHBREACH + 2.0 * DEPTHBREACH / BREACHSIDESLOPE )
                        X_ADAPTLEN = MIN ( 30.0, (XDWNBRINK - XUPBRINK ) / ADAPTLEN )
                        QTBREACH = QTSTARBREACH + ( QTFROMRESVR - QTSTARBREACH ) / EXP( X_ADAPTLEN )
                        EROSIONBREACH = DT * ( QTBREACH - QTFROMRESVR ) / ( 1.0 - PORO )
                    ELSE IF ( NSEDMODCORE == 2 ) THEN
                        CALL SEDCLAY( FLOWBREACH, AREABREACH, RADIBREACH, ANCORE, RHOW, CORECOEFKD, CORECOEFTAUC, DZBDTBREACH ) 
                        EROSIONBREACH = DZBDTBREACH * DT * ( XDWNBRINK - XUPBRINK ) &
                                        * ( WIDTHBREACH + BETABREACH * ( AREABREACH / RADIBREACH - WIDTHBREACH )    &
                                                                * BREACHLOCATE / 2.0 )
                        QTBREACH = QTFROMRESVR + EROSIONBREACH * ( 1.00 - COREPORO ) / DT
                    END IF
                END IF
                ABEDBREACH = ( XDWNBRINK - XUPBRINK ) * WIDTHBREACH
                IF ( XDWNBRINK >= XDWNCORNER ) THEN
                    DEPTHFC = 0.5 * ( (XDWNTOE-XDWNBRINK)*SLOPEDWN + DAMHEIGHT ) - ZBBREACH 
                    ASIDEBREACH = DEPTHFC * ( XDWNBRINK - XDWNCORNER ) + DAMHEIGHT_ZBBREACH * DAMCREST &
                                    + 0.5 * DAMHEIGHT_ZBBREACH * ( XUPCORNER - XUPBRINK )
                ELSE IF ( XDWNBRINK < XDWNCORNER .AND. XDWNBRINK >= XUPCORNER ) THEN
                    ASIDEBREACH = DAMHEIGHT_ZBBREACH * ( XDWNBRINK - XUPCORNER ) &
                                    + 0.5 * DAMHEIGHT_ZBBREACH * ( XUPCORNER - XUPBRINK )
                ELSE
                    DEPTHC = ( XDWNBRINK - XUPTOE ) * SLOPEUP - ZBBREACH
                    ASIDEBREACH = 0.5 * DEPTHC * ( XDWNBRINK - XUPBRINK )
                END IF
                ATOTALBREACH = ABEDBREACH + BREACHLOCATE * ASIDEBREACH * &
                                MAX( BETABREACH/SINALPHA, 1.0/BREACHSIDESLOPE  )
                DZBBREACH = EROSIONBREACH / ATOTALBREACH
                WIDTHBREACH = WIDTHBREACH + BREACHLOCATE * DZBBREACH    &
                                            * ( MAX(BETABREACH/SINALPHA, 1.0/BREACHSIDESLOPE) &
                                                - 1.00 / BREACHSIDESLOPE )
                WIDTHBREACH = MIN( WIDTHBREACH, DAMLENGTH )
                DZBBREACHBOTM = MIN( DZBBREACH, ZBBREACH - ZBHARDBOTTOM )
                ZBBREACH = ZBBREACH - DZBBREACHBOTM
                IF ( MCLAYCORE == 1 ) THEN
                    QTBREACH = QTBREACH - ( DZBBREACH - DZBBREACHBOTM ) &
                                            * ABEDBREACH * ( 1.0 - COREPORO ) / DT
                ELSE
                    QTBREACH = QTBREACH - ( DZBBREACH - DZBBREACHBOTM ) &
                                            * ABEDBREACH * ( 1.0 - PORO ) / DT
                END IF
                WIDTHBREACH = WIDTHBREACH + BREACHLOCATE * ( DZBBREACH - DZBBREACHBOTM ) / BREACHSIDESLOPE
                WIDTHBREACH = MIN( WIDTHBREACH, DAMLENGTH )
                XUPBRINK = XUPBRINK - DZBBREACHBOTM / SLOPEUP
                IF ( MODOVERTOP == 1 ) THEN
                    XDWNBRINK = XDWNBRINK + DZBBREACHBOTM / SLOPEDWN_N
                ELSE IF ( MODOVERTOP == 2 ) THEN
                    XDWNBRINK = XDWNBRINK + DZBBREACHBOTM / SLOPEDWN_N
                    IF ( XDWNBRINK > XHEADCUT ) XDWNBRINK = XHEADCUT
                ELSE IF ( MODOVERTOP == 3 ) THEN
                    IF ( XDWNBRINK > COREDWNCORNER_N ) THEN
                        XDWNBRINKTEMP = XDWNBRINK + DZBBREACHBOTM / SLOPEDWN_N
                        IF ( XDWNBRINKTEMP > COREDWNCORNER_N ) THEN
                            XDWNBRINK = XDWNBRINKTEMP
                        ELSE
                            XDWNBRINK = COREDWNCORNER_N
                        END IF
                    ELSE
                        IF ( ZBBREACH > COREHEIGHT ) THEN
                            XDWNBRINK = COREDWNCORNER_N
                        ELSE
                            SLOPECOREDWN = ( ZBBREACH - ZDWNSLOPBG ) / ( XDWNSLOPBG - COREDWNCORNER_N )
                            XDWNBRINK = XDWNBRINK + DZBBREACHBOTM / SLOPECOREDWN
                            COREDWNCORNER_N = COREDWNCORNER_N + DZBBREACHBOTM / SLOPECOREDWN
                            SLOPECOREUP = COREHEIGHT / ( COREUPCORNER - COREUPTOE + 0.0000000001 )
                            COREUPCORNER_N = COREUPCORNER_N - DZBBREACHBOTM / SLOPECOREUP
                        END IF
                    END IF
                END IF
                IF ( ZBBREACH < 0.000001 ) THEN
                    XUPBRINK = 0.5 * ( XUPTOE + XUPCORNER )
                    XDWNBRINK = XUPBRINK
                END IF
            END IF
        ELSE
            QTBREACH = QTFROMRESVR
            DZBBREACH = 0.00
            DZBBREACHBOTM = 0.00
        END IF
        !!///
        !!///DOWNSTREAM SLOPE///!!
        !!///
        IF ( ( XDWNTOE - XDWNBRINK ) > 0.01 * DAMHEIGHT ) THEN
            IF ( MCOVERDWNSLOPE == 1 ) THEN
                IF ( METHODSIDESLOPE == 1 ) THEN
                    CALL SIDESLOPE( BREACHSIDESLOPE, ZBBREACH, DAMHEIGHT, SPEC, RHOW, PORO, COHESION, TANFRICT )
                ELSE
                    BREACHSIDESLOPE = COVERBREACHSIDESLOPE
                END IF
                BETADWNSLOPE = COVERBETABREACH * MIN( 1.00, MAX(0.00, 1.80*WIDTHBREACH / WIDTHDWNSLOPE - 0.80) )
                SINSLOPE = SLOPEDWN / SQRT( 1.00 + SLOPEDWN * SLOPEDWN )
                CALL FLOWTRAPZ(FLOWBREACH, WIDTHDWNSLOPE, SINSLOPE, COVERANDWNSLOPE, DEPTHDWNSLOPE, &
                                AREADWNSLOPE, RADIDWNSLOPE, BREACHSIDESLOPE)
                CALL SEDCLAY( FLOWBREACH, AREADWNSLOPE, RADIDWNSLOPE, COVERANDWNSLOPE,  &
                                RHOW, COVERCOEFKD, COVERCOEFTAUC, DZBDTDOWNSLOPE ) 
                EROSIONDWNSLOPE = DZBDTDOWNSLOPE * DT * ( XDWNTOE - XDWNBRINK ) &
                                  * ( WIDTHDWNSLOPE + BETADWNSLOPE * ( AREADWNSLOPE / RADIDWNSLOPE - WIDTHDWNSLOPE) &
                                                            * BREACHLOCATE / 2.00 )
                QTDWNSLOPE = QTBREACH + EROSIONDWNSLOPE * ( 1.00 - COVERPORO ) / DT
                DZBC = DZBDTDOWNSLOPE * DT
                WIDTHDWNSLOPE = WIDTHDWNSLOPE + BREACHLOCATE * DZBC * &
                                ( MAX(BETADWNSLOPE/SINALPHA, 1.0/BREACHSIDESLOPE) - 1.00 / BREACHSIDESLOPE )
                WIDTHDWNSLOPE = MIN(WIDTHDWNSLOPE, DAMLENGTH)
                COVERTHICKDWNSLOPE = COVERTHICKDWNSLOPE - DZBC
                IF ( COVERTHICKDWNSLOPE <= 0 ) MCOVERDWNSLOPE = 0
            ELSE
                IF ( MODOVERTOP == 1 ) THEN
                    IF ( METHODSIDESLOPE == 1 ) THEN
                        CALL SIDESLOPE( BREACHSIDESLOPE, ZBBREACH, DAMHEIGHT, SPEC, RHOW, PORO, COHESION, TANFRICT )
                    ELSE
                        BREACHSIDESLOPE = COREBREACHSIDESLOPE
                    END IF
                    BETADWNSLOPE = BETABREACH0 * MIN( 1.00, MAX(0.00, 1.80*WIDTHBREACH / WIDTHDWNSLOPE - 0.80) )
                    SINSLOPE = SLOPEDWN_N / SQRT( 1.00 + SLOPEDWN_N * SLOPEDWN_N )
                    CALL FLOWTRAPZ(FLOWBREACH, WIDTHDWNSLOPE, SINSLOPE, ANDWNSLOPE, DEPTHDWNSLOPE, &
                                   AREADWNSLOPE, RADIDWNSLOPE, BREACHSIDESLOPE)
                    IF ( ZBBREACH > 0.0001 ) THEN
                        IF ( NSEDMOD == 1 ) THEN
                            CALL SEDSAND(FLOWBREACH, AREADWNSLOPE, WIDTHDWNSLOPE, RADIDWNSLOPE, SINSLOPE, &
                                            ANDWNSLOPE, DIASED, SPEC, WSET, PORO, QTSTARDWNSLOPE, BREACHSIDESLOPE, BREACHLOCATE)
                            ADAPTLEN = ADAPTLAMDA * ( WIDTHDWNSLOPE + 2.0 * DEPTHDWNSLOPE / BREACHSIDESLOPE )
                            X_ADAPTLEN = MIN ( 30.0, SQRT( ( XDWNTOE - XDWNBRINK ) ** 2.0 + ZBBREACH ** 2.0 ) / ADAPTLEN )
                            QTDWNSLOPE = QTSTARDWNSLOPE + ( QTBREACH - QTSTARDWNSLOPE ) / EXP( X_ADAPTLEN )
                            QTDWNSLOPE = MAX( QTDWNSLOPE, QTBREACH )
                            EROSIONDWNSLOPE = DT * ( QTDWNSLOPE - QTBREACH ) / ( 1.0 - PORO )
                        ELSE IF ( NSEDMOD == 2 ) THEN
                            CALL SEDCLAY( FLOWBREACH, AREADWNSLOPE, RADIDWNSLOPE, ANDWNSLOPE, &
                                            RHOW, COEFKD, COEFTAUC, DZBDTDOWNSLOPE )
                            EROSIONDWNSLOPE = DZBDTDOWNSLOPE * DT * ( XDWNTOE - XDWNBRINK ) &
                                  * ( WIDTHDWNSLOPE + BETADWNSLOPE * ( AREADWNSLOPE / RADIDWNSLOPE - WIDTHDWNSLOPE) &
                                                            * BREACHLOCATE / 2.00 )
                            QTDWNSLOPE = QTBREACH + EROSIONDWNSLOPE * ( 1.00 - PORO ) / DT
                        END IF
                        ABED = 0.50 * ( XDWNTOE - XDWNBRINK ) * WIDTHDWNSLOPE
                        IF ( XDWNBRINK >= XDWNCORNER ) THEN
                            DEPTHC = ( XDWNTOE - XDWNBRINK ) * ( SLOPEDWN - SLOPEDWN_N )
                            ABEDSIDE = 0.33333 * ( XDWNTOE - XDWNBRINK ) * DEPTHC
                            ASIDE = 0.50 * ( XDWNTOE - XDWNBRINK ) * DEPTHC
                        ELSE IF ( XDWNBRINK < XDWNCORNER .AND. XDWNBRINK >= XUPCORNER ) THEN
                            DEPTHF = ( XDWNTOE - XDWNCORNER ) * ( SLOPEDWN - SLOPEDWN_N )
                            DEPTHC = DAMHEIGHT - ZBBREACH
                            RATIOF = ( XDWNTOE - XDWNCORNER ) / ( XDWNTOE - XDWNBRINK )
                            ABEDSIDE = 0.33333 * ( XDWNTOE - XDWNCORNER ) * RATIOF * DEPTHF &
                                        + ( XDWNCORNER - XDWNBRINK )    &
                                           * ( DEPTHC + RATIOF * DEPTHF + ( 1.0 + RATIOF ) * ( DEPTHC + DEPTHF ) ) / 6.00
                            ASIDE = 0.50 * ( XDWNTOE - XDWNCORNER ) * DEPTHF    &
                                    +   0.50 * ( XDWNCORNER - XDWNBRINK ) * ( DEPTHF + DAMHEIGHT - ZBBREACH )
                        ELSE
                            DEPTHF = ( XDWNTOE - XDWNCORNER ) * ( SLOPEDWN - SLOPEDWN_N )
                            DEPTHE = DAMHEIGHT - ( XDWNTOE - XUPCORNER ) * SLOPEDWN_N
                            DEPTHC = MAX( 0.0, (XDWNBRINK - XUPTOE)*SLOPEUP - ZBBREACH )
                            RATIOF =  ( XDWNTOE - XDWNCORNER ) / ( XDWNTOE - XDWNBRINK )
                            RATIOE =  ( XDWNTOE - XUPCORNER ) / ( XDWNTOE - XDWNBRINK )
                            ABEDSIDE = 0.3333 * ( XDWNTOE - XDWNCORNER ) * RATIOF * DEPTHF   &
                                      + ( XDWNCORNER - XUPCORNER)    &
                                        * ( RATIOE * DEPTHE + RATIOF * DEPTHF   &
                                      + ( RATIOE + RATIOF )*( DEPTHE + DEPTHF) ) / 6.0  &
                                      + ( XUPCORNER - XDWNBRINK )   &
                                       *( DEPTHC + RATIOE * DEPTHE + ( 1.0 + RATIOE ) * ( DEPTHC + DEPTHE ) ) / 6.00
                            ASIDE = 0.50 * ( XDWNTOE - XDWNCORNER ) * DEPTHF    &
                                    + 0.50 * ( XDWNCORNER - XUPCORNER ) * ( DEPTHF + DEPTHE ) &
                                    + 0.50 * ( XUPCORNER - XDWNBRINK ) * ( DEPTHE + DEPTHC )
                        END IF
                        IF ( ZBBREACH < ZBHARDBOTTOM + 0.00001 ) ABEDSIDE = ASIDE
                        ATOTAL = ABED + BREACHLOCATE * MAX( ABEDSIDE / BREACHSIDESLOPE, BETADWNSLOPE * ASIDE / SINALPHA )
                        DZBC = EROSIONDWNSLOPE / ATOTAL 
                        WIDTHDWNSLOPE = WIDTHDWNSLOPE + BREACHLOCATE * DZBC * &
                                ( MAX(BETADWNSLOPE*ASIDE/SINALPHA, ABEDSIDE/BREACHSIDESLOPE) &
                                  - ABEDSIDE / BREACHSIDESLOPE ) / ( ASIDE + 0.0000001 )
                        DZBCBOTM = MAX( 0.0, MIN( DZBC, ZBBREACH - ZBHARDBOTTOM ) )
                        ZBDWNBRINK = MAX( 0.000001, ZBBREACH - DZBCBOTM )
                        QTDWNSLOPE = QTDWNSLOPE - ( DZBC - DZBCBOTM ) * ABED * ( 1.0 - PORO ) / DT
                        WIDTHDWNSLOPE = WIDTHDWNSLOPE + BREACHLOCATE * ( DZBC - DZBCBOTM ) / BREACHSIDESLOPE
                        WIDTHDWNSLOPE = MIN( WIDTHDWNSLOPE, DAMLENGTH )
                        SLOPEDWN_N = ZBDWNBRINK / MAX( 0.0001, XDWNTOE - XDWNBRINK )
                        DISBRINK = DZBCBOTM / SLOPEDWN_N
                        IF ( XDWNBRINK - DISBRINK >= XUPBRINK ) THEN
                            XDWNBRINK = XDWNBRINK - DISBRINK
                            XDWNBRINK = MAX( XDWNBRINK, XUPTOE )
                        ELSE
                            XDWNBRINK0=( -DAMHEIGHT + ZBDWNBRINK + SLOPEDWN_N * XDWNBRINK + SLOPEUP * XUPCORNER) &
                                       / ( SLOPEDWN_N + SLOPEUP )
                            XDWNBRINK = MIN( XDWNBRINK, MAX( XDWNBRINK0, XUPTOE) )
                            ZBBREACH = DAMHEIGHT - SLOPEUP * ( XUPCORNER - XDWNBRINK )
                            XUPBRINK = XDWNBRINK
                            WIDTHBREACH = MAX( WIDTHDWNSLOPE, WIDTHBREACH )
                        
                        END IF
                        WIDTHBREACH = MIN( WIDTHBREACH, DAMLENGTH )
                    ELSE
                        IF ( NSEDMOD == 1 ) THEN
                            CALL SEDSAND(FLOWBREACH, AREADWNSLOPE, WIDTHDWNSLOPE, RADIDWNSLOPE, SINSLOPE, &
                                            ANDWNSLOPE, DIASED, SPEC, WSET, PORO, QTSTARDWNSLOPE, BREACHSIDESLOPE, BREACHLOCATE)
                            ADAPTLEN = ADAPTLAMDA * ( WIDTHDWNSLOPE + 2.0 * DEPTHDWNSLOPE / BREACHSIDESLOPE )
                            X_ADAPTLEN = MIN ( 30.0, SQRT( ( XDWNTOE - XDWNBRINK ) ** 2.0 + ZBBREACH ** 2.0 ) / ADAPTLEN )
                            QTDWNSLOPE = QTSTARDWNSLOPE + ( QTBREACH - QTSTARDWNSLOPE ) / EXP( X_ADAPTLEN )
                            QTDWNSLOPE = MAX( QTDWNSLOPE, QTBREACH )
                            EROSIONDWNSLOPE = DT * ( QTDWNSLOPE - QTBREACH ) / ( 1.0 - PORO )
                        ELSE IF ( NSEDMOD == 2 ) THEN
                            CALL SEDCLAY( FLOWBREACH, AREADWNSLOPE, RADIDWNSLOPE, ANDWNSLOPE, &
                                            RHOW, COEFKD, COEFTAUC, DZBDTDOWNSLOPE )
                            EROSIONDWNSLOPE = DZBDTDOWNSLOPE * DT * ( XDWNTOE - XDWNBRINK + 0.5 * ( XDWNBRINK - XUPTOE ) ) &
                                  * ( WIDTHDWNSLOPE + BETADWNSLOPE * ( AREADWNSLOPE / RADIDWNSLOPE - WIDTHDWNSLOPE) &
                                                            * BREACHLOCATE / 2.00 )
                            QTDWNSLOPE = QTBREACH + EROSIONDWNSLOPE * ( 1.00 - PORO ) / DT
                        END IF
                        ABED = 0.50 * ( XDWNTOE - XDWNBRINK + 0.5 * ( XDWNBRINK - XUPTOE ) ) * WIDTHDWNSLOPE
                        DEPTHFC = 0.50 * DAMHEIGHT_ZBBREACH
                        ABEDSIDE = 0.3333 * DEPTHFC * ( XDWNBRINK - XUPTOE )  &
                                  + 0.5 * ( DEPTHFC + DAMHEIGHT_ZBBREACH ) * ( XUPCORNER - XDWNBRINK )      &
                                  + DAMHEIGHT_ZBBREACH * DAMCREST      &
                                  + 0.5 * DAMHEIGHT_ZBBREACH * ( XDWNTOE - XDWNCORNER )                        
                        ASIDE = 0.5 * DEPTHFC * ( XDWNBRINK - XUPTOE )  &
                                  + 0.5 * ( DEPTHFC + DAMHEIGHT_ZBBREACH ) * ( XUPCORNER - XDWNBRINK )      &
                                  + DAMHEIGHT_ZBBREACH * DAMCREST      &
                                  + 0.5 * DAMHEIGHT_ZBBREACH * ( XDWNTOE - XDWNCORNER )
                        ATOTAL = ABED + BREACHLOCATE * MAX(BETADWNSLOPE*ASIDE/SINALPHA, ABEDSIDE/BREACHSIDESLOPE)
                        DZBC = EROSIONDWNSLOPE / ATOTAL
                        WIDTHDWNSLOPE = WIDTHDWNSLOPE + BREACHLOCATE * DZBC * &
                                ( MAX(BETADWNSLOPE*ASIDE/SINALPHA, ABEDSIDE/BREACHSIDESLOPE)&
                                 - ABEDSIDE / BREACHSIDESLOPE ) / ( ASIDE + 0.0000001 )
                        DZBCBOTM = MAX( 0.0, MIN( DZBC, ZBBREACH - ZBHARDBOTTOM ) )
                        ZBBREACH = ZBBREACH - DZBCBOTM
                        QTDWNSLOPE = QTDWNSLOPE - ( DZBC - DZBCBOTM ) * ABED * ( 1.0 - PORO ) / DT
                        WIDTHDWNSLOPE = WIDTHDWNSLOPE + BREACHLOCATE * ( DZBC - DZBCBOTM ) / BREACHSIDESLOPE
                        WIDTHDWNSLOPE = MIN( WIDTHDWNSLOPE, DAMLENGTH )
                        SLOPEDWN_N = 0.000001
                        XUPBRINK = 0.50 * ( XUPTOE + XUPCORNER )
                        XDWNBRINK = XUPBRINK
                        WIDTHBREACH = MAX( WIDTHDWNSLOPE, WIDTHBREACH )
                    END IF
                    IF ( XDWNBRINK <= XUPBRINK + 0.01 * DAMHEIGHT ) WIDTHBREACH = MAX( WIDTHDWNSLOPE, WIDTHBREACH )
                    WIDTHBREACH = MIN( WIDTHBREACH, DAMLENGTH )
                ELSE IF ( MODOVERTOP == 2 ) THEN
                    IF ( MHEADCUT == 1 ) THEN
                        AQH = ( FLOWBREACH / WIDTHBREACH * ( ZBBREACH - ZBDWNTOE ) * 35.3147 ) ** 0.3333
                        IF ( ERODINDEX > 0.01 ) THEN
                            AQH0 = (189.0 * ERODINDEX**0.5 * EXP( -3.23 / LOG( 101.0 * ERODINDEX ) ) ) ** 0.3333
                        ELSE
                            AQH0 = 0.00
                        END IF
                        IF ( ERODINDEX < 18.2 ) THEN
                            COEFC = -0.79 * LOG( ERODINDEX ) + 3.04
                        ELSE
                            COEFC = 0.75
                        END IF
                        DXDT = COEFC * MAX( 0.00, AQH-AQH0 ) * 0.3048 / 3600.00
                    ELSE IF ( MHEADCUT == 3 ) THEN
                        DXDT = COEFCT * ( FLOWBREACH / WIDTHBREACH ) ** 0.3333  &
                                      * ( MAX( 0.00, ZBBREACH - ZBDWNTOE ) ) ** 0.3333
                    ELSE
                        DXDT = COEFCT * ( FLOWBREACH / WIDTHBREACH ) ** 0.3333  &
                                      * ( MAX( 0.00, ZBBREACH - ZBDWNTOE ) ) ** 0.5000
                    END IF
                    IF ( XHEADCUT > XDWNBRINK ) THEN
                        ZHEADCUT = ZBBREACH * ( XDWNTOE - XHEADCUT ) / ( XDWNTOE - XDWNBRINK )
                        DXDT = DXDT * ( ZBBREACH - ZBDWNTOE ) / MAX( 0.01*(ZBBREACH - ZBDWNTOE), (ZHEADCUT - ZBDWNTOE ) )
                    ELSE
                        ZHEADCUT = ZBBREACH
                    END IF
                    DX = DXDT * DT
                    XHEADCUT = XHEADCUT - DX
                    IF ( XHEADCUT < XUPBRINK ) ZBBREACH = MAX( 0.00, ZBBREACH - DX * SLOPEUP )
                    IF ( XHEADCUT <= XUPBRINK) XUPBRINK = XHEADCUT
                    IF ( XHEADCUT <= XDWNBRINK) XDWNBRINK = XHEADCUT
                    IF ( XHEADCUT <= XUPTOE .OR. ZBBREACH < 0.00001) THEN
                        XUPBRINK  = XUPTOE
                        XDWNBRINK = XUPTOE
                        ZBBREACH  = 0.00001
                        MODOVERTOP = 1
                        HEADCUT = .FALSE.
                    END IF
                    DWIDTHDWNSLOPE = DX * 0.165 * BREACHLOCATE
                    WIDTHDWNSLOPE = WIDTHDWNSLOPE + DWIDTHDWNSLOPE
                    WIDTHDWNSLOPE = MIN( WIDTHDWNSLOPE, DAMLENGTH )
                    IF ( XHEADCUT >= XDWNCORNER ) THEN
                        ZDSHEADCUT = DAMHEIGHT * ( XDWNTOE - XHEADCUT ) / ( XDWNTOE - XDWNCORNER )
                        EROSIONDWNSLOPE = DX * ZHEADCUT * WIDTHDWNSLOPE  &
                                        + DX * MAX(0.0, ZDSHEADCUT - ZHEADCUT) * MAX(0.0,WIDTHDWNSLOPE - WIDTHBREACH )   &
                                        + DWIDTHDWNSLOPE * 0.5 * ZDSHEADCUT * ( XDWNTOE - XHEADCUT )
                    ELSE IF ( XHEADCUT < XDWNCORNER .AND. XHEADCUT >= XUPCORNER ) THEN
                        ZDSHEADCUT = DAMHEIGHT
                        EROSIONDWNSLOPE = DX * ZHEADCUT * WIDTHDWNSLOPE  &
                                        + DX * MAX(0.0, ZDSHEADCUT - ZHEADCUT) * MAX(0.0,WIDTHDWNSLOPE - WIDTHBREACH )   &
                                        + DWIDTHDWNSLOPE * DAMHEIGHT * ( 0.5 * ( XDWNTOE - XDWNCORNER ) + XDWNCORNER - XHEADCUT )
                    ELSE IF ( XHEADCUT < XUPCORNER ) THEN
                        ZDSHEADCUT = DAMHEIGHT * ( XHEADCUT - XUPTOE ) / ( XUPCORNER - XUPTOE )
                        EROSIONDWNSLOPE = DX * ZHEADCUT * WIDTHDWNSLOPE  &
                                        + DX * MAX(0.0, ZDSHEADCUT - ZHEADCUT) * MAX(0.0,WIDTHDWNSLOPE - WIDTHBREACH )   &
                                        + DWIDTHDWNSLOPE * DAMHEIGHT * &
                                        ( 0.5 * ( XDWNTOE - XDWNCORNER ) + XDWNCORNER - XUPCORNER )  &
                                        + DWIDTHDWNSLOPE * 0.5 * ( DAMHEIGHT + ZDSHEADCUT ) * ( XUPCORNER - XHEADCUT )
                    END IF
                    QTDWNSLOPE = QTBREACH + EROSIONDWNSLOPE * ( 1.0 - PORO ) / DT
                    CALL HEADCUTSTAB( ZSRESVRM, DEPTHBREACH, AREABREACH, RADIBREACH )
                    IF ( XDWNBRINK <= XUPBRINK + 0.01 * DAMHEIGHT ) WIDTHBREACH = MAX( WIDTHDWNSLOPE, WIDTHBREACH )
                    WIDTHBREACH = MIN( WIDTHBREACH, DAMLENGTH )
                ELSE IF ( MODOVERTOP == 3) THEN
                    IF ( ZDWNSLOPBG < ZBBREACH - 0.001 .AND. XDWNSLOPBG > COREDWNCORNER_N + 0.001 ) THEN
                        QTCOREDWNSLOPE = QTBREACH
                        IF ( METHODSIDESLOPE == 1 ) THEN
                            CALL SIDESLOPE( BREACHSIDESLOPE, ZBBREACH, DAMHEIGHT, SPEC, RHOW, PORO, COHESION, TANFRICT )
                        ELSE
                            BREACHSIDESLOPE = COREBREACHSIDESLOPE
                        END IF
                        BETABREACH = COREBETABREACH
                        COREDWNLENSLOPE = SQRT( ( ZBBREACH - ZDWNSLOPBG )**2.0 + ( XDWNSLOPBG - COREDWNCORNER_N )**2.0 ) + 0.0000001
                        COREDWNSINSLOPE = ( ZBBREACH - ZDWNSLOPBG ) / COREDWNLENSLOPE
                        COREDWNCOSSLOPE = ( XDWNSLOPBG - COREDWNCORNER_N ) / COREDWNLENSLOPE
                        CALL FLOWTRAPZ(FLOWBREACH, WIDTHDWNSLOPE, COREDWNSINSLOPE, ANCORE, DEPTHCOREDWNSLOPE, &
                                        AREACOREDWNSLOPE, RADICOREDWNSLOPE, BREACHSIDESLOPE)
                        IF ( NSEDMODCORE == 1 ) THEN
                            CALL SEDSAND(FLOWBREACH, AREACOREDWNSLOPE, WIDTHDWNSLOPE, RADICOREDWNSLOPE, COREDWNSINSLOPE, &
                                            ANCORE, COREDIASED, CORESPEC, COREWSET, COREPORO, QTSTARCOREDWNSLOPE, &
                                            BREACHSIDESLOPE, BREACHLOCATE)
                            ADAPTLEN = ADAPTLAMDA * ( WIDTHDWNSLOPE + 2.0 * DEPTHCOREDWNSLOPE / BREACHSIDESLOPE )
                            X_ADAPTLEN = MIN ( 30.0, SQRT( ( XDWNSLOPBG - XDWNBRINK ) ** 2.0 &
                                        + ( ZBBREACH - ZDWNSLOPBG ) ** 2.0 ) / ADAPTLEN )
                            QTCOREDWNSLOPE = QTSTARCOREDWNSLOPE + ( QTBREACH - QTSTARCOREDWNSLOPE ) / EXP( X_ADAPTLEN )
                            QTCOREDWNSLOPE = MAX( QTCOREDWNSLOPE, QTBREACH )
                            DZBDTCOREDWNSLOPE = ( QTCOREDWNSLOPE - QTBREACH ) / ( 1.0 - COREPORO )  &
                                               / ( WIDTHDWNSLOPE + BREACHLOCATE * DEPTHCOREDWNSLOPE / BREACHSIDESLOPE )   &
                                               / MAX( 0.0001, SQRT(( XDWNSLOPBG - XDWNBRINK)**2.0 + (ZBBREACH - ZDWNSLOPBG)**2) )
                           QTBREACH = QTCOREDWNSLOPE
                        ELSE
                            CALL SEDCLAY( FLOWBREACH, AREACOREDWNSLOPE, RADICOREDWNSLOPE, ANCORE, &
                                            RHOW, CORECOEFKD, CORECOEFTAUC, DZBDTCOREDWNSLOPE )
                            EROSIONCOREDWNSLOPE = DZBDTCOREDWNSLOPE * DT * ( XDWNSLOPBG - COREDWNCORNER_N ) &
                                      * ( WIDTHDWNSLOPE + BETADWNSLOPE * ( AREACOREDWNSLOPE / RADICOREDWNSLOPE - WIDTHDWNSLOPE) &
                                                            * BREACHLOCATE / 2.00 )
                            QTCOREDWNSLOPE = QTBREACH + EROSIONCOREDWNSLOPE * ( 1.00 - COREPORO ) / DT
                        END IF
                        DX = DZBDTCOREDWNSLOPE * DT / COREDWNSINSLOPE * 0.60
                        IF ( COREDWNCORNER_N - DX > COREUPCORNER_N ) THEN
                            COREDWNCORNER_N = COREDWNCORNER_N - DX
                        ELSE
                            SLOPECOREDWN = ( ZBBREACH - ZDWNSLOPBG  / ( XDWNSLOPBG - COREDWNCORNER_N ))
                            DSCOREUPCORNER_N = ( COREUPCORNER_N - ( COREDWNCORNER_N - DX ) ) &
                                                        * SLOPECOREDWN / ( SLOPECOREDWN + SLOPECOREUP )
                            COREUPCORNER_N = COREUPCORNER_N - DSCOREUPCORNER_N
                            COREDWNCORNER_N = COREUPCORNER_N
                        END IF
                        XDWNBRINK = COREDWNCORNER_N
                    END IF
                    IF ( METHODSIDESLOPE == 1 ) THEN
                        CALL SIDESLOPE( BREACHSIDESLOPE, ZBBREACH, DAMHEIGHT, SPEC, RHOW, PORO, COHESION, TANFRICT )
                    ELSE
                        BREACHSIDESLOPE = BREACHSIDESLOPE0
                    END IF
                    BETABREACH = BETABREACH0
                    SINSLOPE = SLOPEDWN_N / SQRT ( 1.00 + SLOPEDWN_N * SLOPEDWN_N )
                    CALL FLOWTRAPZ(FLOWBREACH, WIDTHDWNSLOPE, SINSLOPE, ANDWNSLOPE, DEPTHDWNSLOPE, &
                                        AREADWNSLOPE, RADIDWNSLOPE, BREACHSIDESLOPE)
                    CALL SEDSAND( FLOWBREACH, AREADWNSLOPE, WIDTHDWNSLOPE, RADIDWNSLOPE, SINSLOPE,   &
                                  ANDWNSLOPE, DIASED, SPEC, WSET, PORO, QTSTARDWNSLOPE, BREACHSIDESLOPE, BREACHLOCATE)
                    ADAPTLEN = ADAPTLAMDA * ( WIDTHDWNSLOPE + 2.0 * DEPTHDWNSLOPE / BREACHSIDESLOPE )
                    X_ADAPTLEN = MIN( 30.0, SQRT((XDWNTOE-XDWNSLOPBG)**2.0+ ZBBREACH**2.0) / ADAPTLEN )
                    QTDWNSLOPE = QTSTARDWNSLOPE + ( QTBREACH - QTSTARDWNSLOPE ) / EXP( X_ADAPTLEN )
                    QTDWNSLOPE = MAX ( QTDWNSLOPE, QTBREACH )
                    EROSIONDWNSLOPE = DT * ( QTDWNSLOPE - QTBREACH ) / ( 1.0 - PORO )
                    ABED = 0.5 * ( XDWNTOE - XDWNSLOPBG ) * WIDTHDWNSLOPE
                    IF ( XDWNSLOPBG >= XDWNCORNER ) THEN
                        DEPTHC = ( XDWNTOE - XDWNSLOPBG ) * ( SLOPEDWN - SLOPEDWN_N )
                        ABEDSIDE = 0.33333 * ( XDWNTOE - XDWNSLOPBG ) * DEPTHC
                        ASIDE = 0.5 * ( XDWNTOE - XDWNSLOPBG ) * DEPTHC
                    ELSE
                        DEPTHF = ( XDWNTOE - XDWNCORNER ) * ( SLOPEDWN - SLOPEDWN_N )
                        DEPTHC = DAMHEIGHT - ZDWNSLOPBG
                        RATIOF = ( XDWNTOE - XDWNCORNER ) / ( XDWNTOE - XDWNSLOPBG )
                        ABEDSIDE = 0.33333 * ( XDWNTOE - XDWNCORNER ) * RATIOF * DEPTHF     &
                                    + ( XDWNCORNER - XDWNSLOPBG )   &
                                    * ( DEPTHC + RATIOF*DEPTHF + (1.0+RATIOF) * ( DEPTHC + DEPTHF ) ) / 6.00
                        ASIDE = 0.5 * ( XDWNTOE - XDWNCORNER ) * DEPTHF &
                                + 0.5 * ( XDWNCORNER - XDWNSLOPBG ) * ( DEPTHF + DEPTHC )
                    END IF
                    ASIDEUP = 0.5 * ( XDWNSLOPBG - XDWNBRINK ) * ( 2.0 * DAMHEIGHT - ZDWNSLOPBG - ZBBREACH )
                    ATOTAL = ABED + BREACHLOCATE *  &
                                ( MAX(ABEDSIDE/BREACHSIDESLOPE, BETADWNSLOPE*ASIDE/SINALPHA)    &
                                    + BETADWNSLOPE * ASIDEUP / SINALPHA )
                    DZBC = EROSIONDWNSLOPE / ATOTAL
                    WIDTHDWNSLOPE = WIDTHDWNSLOPE + BREACHLOCATE * DZBC &
                                    * ( MAX(ABEDSIDE/BREACHSIDESLOPE, BETADWNSLOPE*ASIDE/SINALPHA )     &
                                        - ABEDSIDE/BREACHSIDESLOPE )    &
                                        / ( ASIDE + 0.000000001 )
                    DZBCBOTM = MAX( 0.00, MIN( DZBC, ZDWNSLOPBG-ZBHARDBOTTOM ) ) 
                    QTDWNSLOPE = QTDWNSLOPE - ( DZBC - DZBCBOTM ) * ABED * ( 1.0 - PORO ) / DT
                    WIDTHDWNSLOPE = WIDTHDWNSLOPE + BREACHLOCATE * ( DZBC - DZBCBOTM ) / BREACHSIDESLOPE
                    WIDTHDWNSLOPE = MIN( WIDTHDWNSLOPE, DAMLENGTH )
                    SLOPEDWN_N = ( ZDWNSLOPBG - DZBCBOTM ) / MAX( 0.0001, ( XDWNTOE - XDWNSLOPBG ) )
                    IF ( XDWNBRINK > COREDWNCORNER_N ) THEN
                        DISBRINK = DZBCBOTM / SLOPEDWN_N + 0.00000001
                        IF ( XDWNBRINK - DISBRINK >= COREDWNCORNER_N ) THEN
                            XDWNBRINK = XDWNBRINK - DISBRINK
                        ELSE
                            ZDWNSLOPBG = ZDWNSLOPBG - DZBCBOTM * ( 1.0-(XDWNBRINK-COREDWNCORNER_N) / DISBRINK )
                            XDWNBRINK = COREDWNCORNER_N
                        END IF
                        XDWNSLOPBG = XDWNBRINK
                    ELSE
                        IF ( ZDWNSLOPBG > COREHEIGHT ) THEN
                            ZDWNSLOPBG = ZDWNSLOPBG - DZBCBOTM
                            XDWNSLOPBG = COREDWNCORNER_N
                        ELSE
                            SLOPECOREDWN = COREHEIGHT / ( COREDWNTOE - COREDWNCORNER + 0.00000001 )
                            DISBRINK = DZBCBOTM / SLOPECOREDWN
                            XDWNSLOPBG = MIN( XDWNSLOPBG + DISBRINK, COREDWNTOE )
                            ZDWNSLOPBG = ZDWNSLOPBG - DZBCBOTM
                        END IF
                    END IF
                    IF ( ZDWNSLOPBG > ZBBREACH ) ZDWNSLOPBG = ZBBREACH
                    CALL CLAYCORESTAB( ZSRESVRM, DEPTHBREACH, AREABREACH, RADIBREACH )
                    IF ( XDWNBRINK <= XUPBRINK + 0.01 * DAMHEIGHT ) WIDTHBREACH = MAX( WIDTHDWNSLOPE, WIDTHBREACH )
                    WIDTHBREACH = MIN( WIDTHBREACH, DAMLENGTH )
                    QTDWNSLOPE = QTDWNSLOPE + MAX( 0.0, QTCOREDWNSLOPE - QTBREACH )
                END IF
            END IF
        ELSE
            QTDWNSLOPE = QTBREACH
            WIDTHDWNSLOPE = WIDTHBREACH
        END IF
    ELSE IF ( OVERTOP_PIPE == 2 ) THEN
        IF ( ZSRESVRM >= ZBBREACH + HEIGHTBREACH ) THEN
            AREABREACH = WIDTHBREACH * HEIGHTBREACH
            RADIBREACH = AREABREACH / 2.00 / ( WIDTHBREACH + HEIGHTBREACH )
            ANBREACHF = SQRT( FRICTIONFACTOR * RADIBREACH ** 0.3333 / 8.00 / 9.81 )
            IF ( NSEDMOD == 1 ) THEN
                CALL SEDSAND(FLOWBREACH, AREABREACH, WIDTHBREACH, RADIBREACH, 0.0, &
                             ANBREACH, DIASED, SPEC, WSET, PORO, QTSTARBREACH, BREACHSIDESLOPE, BREACHLOCATE)
                ADAPTLEN = ADAPTLAMDA * WIDTHBREACH
                X_ADAPTLEN = MIN ( 30.0, (XDWNCENTER - XUPCENTER ) / ADAPTLEN )
                QTBREACH = QTSTARBREACH + ( QTFROMRESVR - QTSTARBREACH ) / EXP( X_ADAPTLEN )
                EROSIONBREACH = DT * ( QTBREACH - QTFROMRESVR ) / ( 1.0 - PORO )
                ATOTALBREACH = ( XDWNCENTER - XUPCENTER ) * ( WIDTHBREACH*2.0 + BREACHLOCATE * HEIGHTBREACH )
                DZBBREACH = EROSIONBREACH / ATOTALBREACH
                DZBBREACHTOP = MIN( DZBBREACH, DAMHEIGHT - ZBBREACH - HEIGHTBREACH )
                DZBBREACHSIDE = DZBBREACH
                DZBBREACHBOTM = MIN( DZBBREACH, ZBBREACH-ZBHARDBOTTOM )
            ELSE IF ( NSEDMOD == 2 ) THEN
                CALL SEDCLAY( FLOWBREACH, AREABREACH, RADIBREACH, ANBREACHF, RHOW, COEFKD, COEFTAUC, DZBDTBREACH ) 
                DZBBREACH = DZBDTBREACH * DT
                DZBBREACHTOP = MIN( DZBBREACH, DAMHEIGHT - ZBBREACH - HEIGHTBREACH )
                DZBBREACHSIDE = DZBBREACH
                DZBBREACHBOTM = MIN( DZBBREACH, ZBBREACH - ZBHARDBOTTOM )      
                EROSIONBREACH = ( XDWNCENTER - XUPCENTER ) * ( DZBBREACHSIDE * BREACHLOCATE * HEIGHTBREACH + &
                                                        ( DZBBREACHTOP + DZBBREACHBOTM ) * WIDTHBREACH )
                QTBREACH = QTFROMRESVR + EROSIONBREACH * ( 1.00 - PORO ) / DT
            END IF
            HEIGHTBREACH = HEIGHTBREACH + DZBBREACHTOP + DZBBREACHBOTM
            WIDTHBREACH = WIDTHBREACH + DZBBREACHSIDE * BREACHLOCATE
            WIDTHBREACH = MIN( WIDTHBREACH, DAMLENGTH )
            ZBBREACH = ZBBREACH - DZBBREACHBOTM
            XUPBRINK = XUPBRINK - DZBBREACHBOTM / SLOPEUP
            XDWNBRINK = XDWNBRINK + DZBBREACHBOTM / SLOPEDWN_N
        ELSE
            DEPTHBREACH = 0.72 * ( ZSRESVRM - ZBBREACH )
            AREABREACH = WIDTHBREACH * DEPTHBREACH
            RADIBREACH = AREABREACH / ( WIDTHBREACH + 2.00 * DEPTHBREACH )
            IF ( NSEDMOD == 1 ) THEN
                CALL SEDSAND(FLOWBREACH, AREABREACH, WIDTHBREACH, RADIBREACH, 0.0, &
                             ANBREACH, DIASED, SPEC, WSET, PORO, QTSTARBREACH, BREACHSIDESLOPE, BREACHLOCATE)
                ADAPTLEN = ADAPTLAMDA * WIDTHBREACH
                X_ADAPTLEN = MIN ( 30.0, (XDWNCENTER - XUPCENTER ) / ADAPTLEN )
                QTBREACH = QTSTARBREACH + ( QTFROMRESVR - QTSTARBREACH ) / EXP( X_ADAPTLEN )
                EROSIONBREACH = DT * ( QTBREACH - QTFROMRESVR ) / ( 1.0 - PORO )
                ATOTALBREACH = ( XDWNCENTER - XUPCENTER ) * ( WIDTHBREACH + BREACHLOCATE * HEIGHTBREACH )
                DZBBREACH = EROSIONBREACH / ATOTALBREACH
                DZBBREACHBOTM = MIN( DZBBREACH, ZBBREACH-ZBHARDBOTTOM )
                DZBBREACHSIDE = DZBBREACH
            ELSE IF ( NSEDMOD == 2 ) THEN
                CALL SEDCLAY( FLOWBREACH, AREABREACH, RADIBREACH, ANBREACH, RHOW, COEFKD, COEFTAUC, DZBDTBREACH )
                DZBDTBREACH = DZBDTBREACH * ( WIDTHBREACH + BREACHLOCATE * DEPTHBREACH ) &
                             / ( WIDTHBREACH + BREACHLOCATE * HEIGHTBREACH )
                DZBBREACH = DZBDTBREACH * DT
                DZBBREACHSIDE = DZBBREACH
                DZBBREACHBOTM = MIN( DZBBREACH, ZBBREACH - ZBHARDBOTTOM )      
                EROSIONBREACH = ( XDWNCENTER - XUPCENTER ) * ( DZBBREACHSIDE * BREACHLOCATE * HEIGHTBREACH + &
                                                       DZBBREACHBOTM * WIDTHBREACH )
                QTBREACH = QTFROMRESVR + EROSIONBREACH * ( 1.00 - PORO ) / DT
            END IF
            HEIGHTBREACH = HEIGHTBREACH + DZBBREACHBOTM
            WIDTHBREACH = WIDTHBREACH + DZBBREACHSIDE * BREACHLOCATE
            WIDTHBREACH = MIN( WIDTHBREACH, DAMLENGTH )
            ZBBREACH = ZBBREACH - DZBBREACHBOTM
            XUPBRINK = XUPBRINK - DZBBREACHBOTM / SLOPEUP
            XDWNBRINK = XDWNBRINK + DZBBREACHBOTM / SLOPEDWN_N
        END IF
        XUPCENTER = XUPBRINK + HEIGHTBREACH / 2.0 / SLOPEUP
        XDWNCENTER = XDWNBRINK - HEIGHTBREACH / 2.0 / SLOPEDWN_N
        QTDWNSLOPE = QTBREACH
        WIDTHDWNSLOPE = WIDTHBREACH
        CALL PIPETOPSTAB( ZSRESVRM )
    END IF
    RETURN
END SUBROUTINE SOILMOVE    
    

